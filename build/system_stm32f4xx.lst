ARM GAS  /tmp/ccn9ZWRj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SystemInit
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	SystemInit:
  28              	.LFB130:
  29              		.file 1 "Src/system_stm32f4xx.c"
   1:Src/system_stm32f4xx.c **** /**
   2:Src/system_stm32f4xx.c ****   ******************************************************************************
   3:Src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:Src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   6:Src/system_stm32f4xx.c ****   *
   7:Src/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from 
   8:Src/system_stm32f4xx.c ****   *   user application:
   9:Src/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  12:Src/system_stm32f4xx.c ****   *
  13:Src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  15:Src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32f4xx.c ****   *                                     
  17:Src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32f4xx.c ****   *                                 during program execution.
  20:Src/system_stm32f4xx.c ****   *
  21:Src/system_stm32f4xx.c ****   *
  22:Src/system_stm32f4xx.c ****   ******************************************************************************
  23:Src/system_stm32f4xx.c ****   * @attention
  24:Src/system_stm32f4xx.c ****   *
  25:Src/system_stm32f4xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  26:Src/system_stm32f4xx.c ****   * All rights reserved.</center></h2>
  27:Src/system_stm32f4xx.c ****   *
  28:Src/system_stm32f4xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Src/system_stm32f4xx.c ****   * the "License"; You may not use this file except in compliance with the
ARM GAS  /tmp/ccn9ZWRj.s 			page 2


  30:Src/system_stm32f4xx.c ****   * License. You may obtain a copy of the License at:
  31:Src/system_stm32f4xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Src/system_stm32f4xx.c ****   *
  33:Src/system_stm32f4xx.c ****   ******************************************************************************
  34:Src/system_stm32f4xx.c ****   */
  35:Src/system_stm32f4xx.c **** 
  36:Src/system_stm32f4xx.c **** /** @addtogroup CMSIS
  37:Src/system_stm32f4xx.c ****   * @{
  38:Src/system_stm32f4xx.c ****   */
  39:Src/system_stm32f4xx.c **** 
  40:Src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  41:Src/system_stm32f4xx.c ****   * @{
  42:Src/system_stm32f4xx.c ****   */  
  43:Src/system_stm32f4xx.c ****   
  44:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  45:Src/system_stm32f4xx.c ****   * @{
  46:Src/system_stm32f4xx.c ****   */
  47:Src/system_stm32f4xx.c **** 
  48:Src/system_stm32f4xx.c **** 
  49:Src/system_stm32f4xx.c **** #include "stm32f4xx.h"
  50:Src/system_stm32f4xx.c **** 
  51:Src/system_stm32f4xx.c **** #if !defined  (HSE_VALUE) 
  52:Src/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  53:Src/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  54:Src/system_stm32f4xx.c **** 
  55:Src/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  56:Src/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  57:Src/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  58:Src/system_stm32f4xx.c **** 
  59:Src/system_stm32f4xx.c **** /**
  60:Src/system_stm32f4xx.c ****   * @}
  61:Src/system_stm32f4xx.c ****   */
  62:Src/system_stm32f4xx.c **** 
  63:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  64:Src/system_stm32f4xx.c ****   * @{
  65:Src/system_stm32f4xx.c ****   */
  66:Src/system_stm32f4xx.c **** 
  67:Src/system_stm32f4xx.c **** /**
  68:Src/system_stm32f4xx.c ****   * @}
  69:Src/system_stm32f4xx.c ****   */
  70:Src/system_stm32f4xx.c **** 
  71:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
  72:Src/system_stm32f4xx.c ****   * @{
  73:Src/system_stm32f4xx.c ****   */
  74:Src/system_stm32f4xx.c **** 
  75:Src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  76:Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM or SDRAM as data memory  */
  77:Src/system_stm32f4xx.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx)\
  78:Src/system_stm32f4xx.c ****  || defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
  79:Src/system_stm32f4xx.c ****  || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) || defined(STM32F412Vx)
  80:Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
  81:Src/system_stm32f4xx.c **** #endif /* STM32F40xxx || STM32F41xxx || STM32F42xxx || STM32F43xxx || STM32F469xx || STM32F479xx ||
  82:Src/system_stm32f4xx.c ****           STM32F412Zx || STM32F412Vx */
  83:Src/system_stm32f4xx.c ****  
  84:Src/system_stm32f4xx.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
  85:Src/system_stm32f4xx.c ****  || defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
  86:Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSDRAM */
ARM GAS  /tmp/ccn9ZWRj.s 			page 3


  87:Src/system_stm32f4xx.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F446xx || STM32F469xx ||
  88:Src/system_stm32f4xx.c ****           STM32F479xx */
  89:Src/system_stm32f4xx.c **** 
  90:Src/system_stm32f4xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  91:Src/system_stm32f4xx.c ****          configuration. */
  92:Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  93:Src/system_stm32f4xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  94:Src/system_stm32f4xx.c ****      remap of boot address selected */
  95:Src/system_stm32f4xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  96:Src/system_stm32f4xx.c **** 
  97:Src/system_stm32f4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  98:Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  99:Src/system_stm32f4xx.c ****      in Sram else user remap will be done in Flash. */
 100:Src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 101:Src/system_stm32f4xx.c **** #if defined(VECT_TAB_SRAM)
 102:Src/system_stm32f4xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
 103:Src/system_stm32f4xx.c ****                                                      This value must be a multiple of 0x200. */
 104:Src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 105:Src/system_stm32f4xx.c ****                                                      This value must be a multiple of 0x200. */
 106:Src/system_stm32f4xx.c **** #else
 107:Src/system_stm32f4xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 108:Src/system_stm32f4xx.c ****                                                      This value must be a multiple of 0x200. */
 109:Src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 110:Src/system_stm32f4xx.c ****                                                      This value must be a multiple of 0x200. */
 111:Src/system_stm32f4xx.c **** #endif /* VECT_TAB_SRAM */
 112:Src/system_stm32f4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 113:Src/system_stm32f4xx.c **** /******************************************************************************/
 114:Src/system_stm32f4xx.c **** 
 115:Src/system_stm32f4xx.c **** /**
 116:Src/system_stm32f4xx.c ****   * @}
 117:Src/system_stm32f4xx.c ****   */
 118:Src/system_stm32f4xx.c **** 
 119:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 120:Src/system_stm32f4xx.c ****   * @{
 121:Src/system_stm32f4xx.c ****   */
 122:Src/system_stm32f4xx.c **** 
 123:Src/system_stm32f4xx.c **** /**
 124:Src/system_stm32f4xx.c ****   * @}
 125:Src/system_stm32f4xx.c ****   */
 126:Src/system_stm32f4xx.c **** 
 127:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 128:Src/system_stm32f4xx.c ****   * @{
 129:Src/system_stm32f4xx.c ****   */
 130:Src/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 131:Src/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 132:Src/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 133:Src/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 134:Src/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
 135:Src/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 136:Src/system_stm32f4xx.c ****                variable is updated automatically.
 137:Src/system_stm32f4xx.c ****   */
 138:Src/system_stm32f4xx.c **** uint32_t SystemCoreClock = 16000000;
 139:Src/system_stm32f4xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 140:Src/system_stm32f4xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 141:Src/system_stm32f4xx.c **** /**
 142:Src/system_stm32f4xx.c ****   * @}
 143:Src/system_stm32f4xx.c ****   */
ARM GAS  /tmp/ccn9ZWRj.s 			page 4


 144:Src/system_stm32f4xx.c **** 
 145:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 146:Src/system_stm32f4xx.c ****   * @{
 147:Src/system_stm32f4xx.c ****   */
 148:Src/system_stm32f4xx.c **** 
 149:Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 150:Src/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 151:Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 152:Src/system_stm32f4xx.c **** 
 153:Src/system_stm32f4xx.c **** /**
 154:Src/system_stm32f4xx.c ****   * @}
 155:Src/system_stm32f4xx.c ****   */
 156:Src/system_stm32f4xx.c **** 
 157:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 158:Src/system_stm32f4xx.c ****   * @{
 159:Src/system_stm32f4xx.c ****   */
 160:Src/system_stm32f4xx.c **** 
 161:Src/system_stm32f4xx.c **** /**
 162:Src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 163:Src/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory 
 164:Src/system_stm32f4xx.c ****   *         configuration.
 165:Src/system_stm32f4xx.c ****   * @param  None
 166:Src/system_stm32f4xx.c ****   * @retval None
 167:Src/system_stm32f4xx.c ****   */
 168:Src/system_stm32f4xx.c **** void SystemInit(void)
 169:Src/system_stm32f4xx.c **** {
  30              		.loc 1 169 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 170:Src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 171:Src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 172:Src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  35              		.loc 1 172 5 view .LVU1
  36              		.loc 1 172 16 is_stmt 0 view .LVU2
  37 0000 034A     		ldr	r2, .L3
  38 0002 D2F88830 		ldr	r3, [r2, #136]
  39 0006 43F47003 		orr	r3, r3, #15728640
  40 000a C2F88830 		str	r3, [r2, #136]
 173:Src/system_stm32f4xx.c ****   #endif
 174:Src/system_stm32f4xx.c **** 
 175:Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 176:Src/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 177:Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 178:Src/system_stm32f4xx.c **** 
 179:Src/system_stm32f4xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 180:Src/system_stm32f4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 181:Src/system_stm32f4xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM 
 182:Src/system_stm32f4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 183:Src/system_stm32f4xx.c **** }
  41              		.loc 1 183 1 view .LVU3
  42 000e 7047     		bx	lr
  43              	.L4:
  44              		.align	2
  45              	.L3:
  46 0010 00ED00E0 		.word	-536810240
ARM GAS  /tmp/ccn9ZWRj.s 			page 5


  47              		.cfi_endproc
  48              	.LFE130:
  50              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  51              		.align	1
  52              		.p2align 2,,3
  53              		.global	SystemCoreClockUpdate
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	SystemCoreClockUpdate:
  60              	.LFB131:
 184:Src/system_stm32f4xx.c **** 
 185:Src/system_stm32f4xx.c **** /**
 186:Src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 187:Src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 188:Src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 189:Src/system_stm32f4xx.c ****   *         other parameters.
 190:Src/system_stm32f4xx.c ****   *           
 191:Src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 192:Src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 193:Src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 194:Src/system_stm32f4xx.c ****   *     
 195:Src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 196:Src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 197:Src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 198:Src/system_stm32f4xx.c ****   *             
 199:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 200:Src/system_stm32f4xx.c ****   *                                              
 201:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 202:Src/system_stm32f4xx.c ****   *                          
 203:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 204:Src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 205:Src/system_stm32f4xx.c ****   *         
 206:Src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 207:Src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 208:Src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 209:Src/system_stm32f4xx.c ****   *    
 210:Src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 211:Src/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 212:Src/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 213:Src/system_stm32f4xx.c ****   *              may have wrong result.
 214:Src/system_stm32f4xx.c ****   *                
 215:Src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 216:Src/system_stm32f4xx.c ****   *           value for HSE crystal.
 217:Src/system_stm32f4xx.c ****   *     
 218:Src/system_stm32f4xx.c ****   * @param  None
 219:Src/system_stm32f4xx.c ****   * @retval None
 220:Src/system_stm32f4xx.c ****   */
 221:Src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 222:Src/system_stm32f4xx.c **** {
  61              		.loc 1 222 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
 223:Src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
ARM GAS  /tmp/ccn9ZWRj.s 			page 6


  66              		.loc 1 223 3 view .LVU5
  67              	.LVL0:
 224:Src/system_stm32f4xx.c ****   
 225:Src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 226:Src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  68              		.loc 1 226 3 view .LVU6
  69              		.loc 1 226 12 is_stmt 0 view .LVU7
  70 0000 164A     		ldr	r2, .L12
  71 0002 9368     		ldr	r3, [r2, #8]
  72              		.loc 1 226 7 view .LVU8
  73 0004 03F00C03 		and	r3, r3, #12
  74              	.LVL1:
 227:Src/system_stm32f4xx.c **** 
 228:Src/system_stm32f4xx.c ****   switch (tmp)
  75              		.loc 1 228 3 is_stmt 1 view .LVU9
  76 0008 042B     		cmp	r3, #4
  77 000a 0CD0     		beq	.L9
  78 000c 082B     		cmp	r3, #8
  79 000e 0CD0     		beq	.L11
  80 0010 134B     		ldr	r3, .L12+4
  81              	.LVL2:
  82              	.L6:
 229:Src/system_stm32f4xx.c ****   {
 230:Src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 231:Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 232:Src/system_stm32f4xx.c ****       break;
 233:Src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 234:Src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 235:Src/system_stm32f4xx.c ****       break;
 236:Src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 237:Src/system_stm32f4xx.c **** 
 238:Src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 239:Src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 240:Src/system_stm32f4xx.c ****          */    
 241:Src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 242:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 243:Src/system_stm32f4xx.c ****       
 244:Src/system_stm32f4xx.c ****       if (pllsource != 0)
 245:Src/system_stm32f4xx.c ****       {
 246:Src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 247:Src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 248:Src/system_stm32f4xx.c ****       }
 249:Src/system_stm32f4xx.c ****       else
 250:Src/system_stm32f4xx.c ****       {
 251:Src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 252:Src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 253:Src/system_stm32f4xx.c ****       }
 254:Src/system_stm32f4xx.c **** 
 255:Src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 256:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 257:Src/system_stm32f4xx.c ****       break;
 258:Src/system_stm32f4xx.c ****     default:
 259:Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 260:Src/system_stm32f4xx.c ****       break;
 261:Src/system_stm32f4xx.c ****   }
 262:Src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 263:Src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
ARM GAS  /tmp/ccn9ZWRj.s 			page 7


 264:Src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
  83              		.loc 1 264 3 view .LVU10
  84              		.loc 1 264 28 is_stmt 0 view .LVU11
  85 0012 124A     		ldr	r2, .L12
  86              		.loc 1 264 22 view .LVU12
  87 0014 1348     		ldr	r0, .L12+8
  88              		.loc 1 264 28 view .LVU13
  89 0016 9268     		ldr	r2, [r2, #8]
  90              	.LVL3:
 265:Src/system_stm32f4xx.c ****   /* HCLK frequency */
 266:Src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
  91              		.loc 1 266 3 is_stmt 1 view .LVU14
  92              		.loc 1 266 19 is_stmt 0 view .LVU15
  93 0018 1349     		ldr	r1, .L12+12
 264:Src/system_stm32f4xx.c ****   /* HCLK frequency */
  94              		.loc 1 264 52 view .LVU16
  95 001a C2F30312 		ubfx	r2, r2, #4, #4
  96              	.LVL4:
 264:Src/system_stm32f4xx.c ****   /* HCLK frequency */
  97              		.loc 1 264 7 view .LVU17
  98 001e 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
  99              		.loc 1 266 19 view .LVU18
 100 0020 D340     		lsrs	r3, r3, r2
 101 0022 0B60     		str	r3, [r1]
 267:Src/system_stm32f4xx.c **** }
 102              		.loc 1 267 1 view .LVU19
 103 0024 7047     		bx	lr
 104              	.LVL5:
 105              	.L9:
 228:Src/system_stm32f4xx.c ****   {
 106              		.loc 1 228 3 view .LVU20
 107 0026 114B     		ldr	r3, .L12+16
 108              	.LVL6:
 228:Src/system_stm32f4xx.c ****   {
 109              		.loc 1 228 3 view .LVU21
 110 0028 F3E7     		b	.L6
 111              	.LVL7:
 112              	.L11:
 241:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 113              		.loc 1 241 7 is_stmt 1 view .LVU22
 241:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 114              		.loc 1 241 23 is_stmt 0 view .LVU23
 115 002a 5068     		ldr	r0, [r2, #4]
 116              	.LVL8:
 242:Src/system_stm32f4xx.c ****       
 117              		.loc 1 242 7 is_stmt 1 view .LVU24
 242:Src/system_stm32f4xx.c ****       
 118              		.loc 1 242 17 is_stmt 0 view .LVU25
 119 002c 5168     		ldr	r1, [r2, #4]
 247:Src/system_stm32f4xx.c ****       }
 120              		.loc 1 247 44 view .LVU26
 121 002e 5268     		ldr	r2, [r2, #4]
 244:Src/system_stm32f4xx.c ****       {
 122              		.loc 1 244 10 view .LVU27
 123 0030 4302     		lsls	r3, r0, #9
 124              	.LVL9:
 252:Src/system_stm32f4xx.c ****       }
ARM GAS  /tmp/ccn9ZWRj.s 			page 8


 125              		.loc 1 252 74 view .LVU28
 126 0032 C2F38812 		ubfx	r2, r2, #6, #9
 247:Src/system_stm32f4xx.c ****       }
 127              		.loc 1 247 29 view .LVU29
 128 0036 4CBF     		ite	mi
 129 0038 0C4B     		ldrmi	r3, .L12+16
 252:Src/system_stm32f4xx.c ****       }
 130              		.loc 1 252 29 view .LVU30
 131 003a 094B     		ldrpl	r3, .L12+4
 242:Src/system_stm32f4xx.c ****       
 132              		.loc 1 242 12 view .LVU31
 133 003c 01F03F01 		and	r1, r1, #63
 134              	.LVL10:
 244:Src/system_stm32f4xx.c ****       {
 135              		.loc 1 244 7 is_stmt 1 view .LVU32
 247:Src/system_stm32f4xx.c ****       }
 136              		.loc 1 247 9 view .LVU33
 252:Src/system_stm32f4xx.c ****       }
 137              		.loc 1 252 9 view .LVU34
 252:Src/system_stm32f4xx.c ****       }
 138              		.loc 1 252 29 is_stmt 0 view .LVU35
 139 0040 B3FBF1F3 		udiv	r3, r3, r1
 252:Src/system_stm32f4xx.c ****       }
 140              		.loc 1 252 16 view .LVU36
 141 0044 03FB02F3 		mul	r3, r3, r2
 142              	.LVL11:
 255:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 143              		.loc 1 255 7 is_stmt 1 view .LVU37
 255:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 144              		.loc 1 255 20 is_stmt 0 view .LVU38
 145 0048 044A     		ldr	r2, .L12
 146 004a 5268     		ldr	r2, [r2, #4]
 147              	.LVL12:
 256:Src/system_stm32f4xx.c ****       break;
 148              		.loc 1 256 7 is_stmt 1 view .LVU39
 255:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 149              		.loc 1 255 50 is_stmt 0 view .LVU40
 150 004c C2F30142 		ubfx	r2, r2, #16, #2
 151              	.LVL13:
 255:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 152              		.loc 1 255 56 view .LVU41
 153 0050 0132     		adds	r2, r2, #1
 255:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 154              		.loc 1 255 12 view .LVU42
 155 0052 5200     		lsls	r2, r2, #1
 256:Src/system_stm32f4xx.c ****       break;
 156              		.loc 1 256 31 view .LVU43
 157 0054 B3FBF2F3 		udiv	r3, r3, r2
 158              	.LVL14:
 257:Src/system_stm32f4xx.c ****     default:
 159              		.loc 1 257 7 is_stmt 1 view .LVU44
 160 0058 DBE7     		b	.L6
 161              	.L13:
 162 005a 00BF     		.align	2
 163              	.L12:
 164 005c 00380240 		.word	1073887232
 165 0060 0024F400 		.word	16000000
ARM GAS  /tmp/ccn9ZWRj.s 			page 9


 166 0064 00000000 		.word	.LANCHOR1
 167 0068 00000000 		.word	.LANCHOR0
 168 006c 001BB700 		.word	12000000
 169              		.cfi_endproc
 170              	.LFE131:
 172              		.global	APBPrescTable
 173              		.global	AHBPrescTable
 174              		.global	SystemCoreClock
 175              		.section	.data.SystemCoreClock,"aw"
 176              		.align	2
 177              		.set	.LANCHOR0,. + 0
 180              	SystemCoreClock:
 181 0000 0024F400 		.word	16000000
 182              		.section	.rodata.AHBPrescTable,"a"
 183              		.align	2
 184              		.set	.LANCHOR1,. + 0
 187              	AHBPrescTable:
 188 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 188      00000000 
 188      01020304 
 188      06
 189 000d 070809   		.ascii	"\007\010\011"
 190              		.section	.rodata.APBPrescTable,"a"
 191              		.align	2
 194              	APBPrescTable:
 195 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 195      01020304 
 196              		.text
 197              	.Letext0:
 198              		.file 2 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
 199              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 200              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 201              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 202              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 203              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccn9ZWRj.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f4xx.c
     /tmp/ccn9ZWRj.s:18     .text.SystemInit:0000000000000000 $t
     /tmp/ccn9ZWRj.s:27     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccn9ZWRj.s:46     .text.SystemInit:0000000000000010 $d
     /tmp/ccn9ZWRj.s:51     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccn9ZWRj.s:59     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccn9ZWRj.s:164    .text.SystemCoreClockUpdate:000000000000005c $d
     /tmp/ccn9ZWRj.s:194    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccn9ZWRj.s:187    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccn9ZWRj.s:180    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccn9ZWRj.s:176    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccn9ZWRj.s:183    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccn9ZWRj.s:191    .rodata.APBPrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS

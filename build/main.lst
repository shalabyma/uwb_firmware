ARM GAS  /tmp/ccvvSAxZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SystemClock_Config
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	SystemClock_Config:
  28              	.LFB140:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  21:Src/main.c    **** #include "main.h"
  22:Src/main.c    **** #include "cmsis_os.h"
  23:Src/main.c    **** #include "i2c.h"
  24:Src/main.c    **** #include "spi.h"
  25:Src/main.c    **** #include "usb_device.h"
  26:Src/main.c    **** #include "gpio.h"
  27:Src/main.c    **** 
  28:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  29:Src/main.c    **** /* USER CODE BEGIN Includes */
ARM GAS  /tmp/ccvvSAxZ.s 			page 2


  30:Src/main.c    **** 
  31:Src/main.c    **** /* USER CODE END Includes */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE END PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PD */
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  54:Src/main.c    **** void SystemClock_Config(void);
  55:Src/main.c    **** void MX_FREERTOS_Init(void);
  56:Src/main.c    **** /* USER CODE BEGIN PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /**
  66:Src/main.c    ****   * @brief  The application entry point.
  67:Src/main.c    ****   * @retval int
  68:Src/main.c    ****   */
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  71:Src/main.c    ****   /* USER CODE BEGIN 1 */
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* USER CODE END 1 */
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Src/main.c    ****   HAL_Init();
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE BEGIN Init */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE END Init */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Configure the system clock */
  85:Src/main.c    ****   SystemClock_Config();
  86:Src/main.c    **** 
ARM GAS  /tmp/ccvvSAxZ.s 			page 3


  87:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END SysInit */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Initialize all configured peripherals */
  92:Src/main.c    ****   MX_GPIO_Init();
  93:Src/main.c    ****   MX_I2C2_Init();
  94:Src/main.c    ****   MX_SPI1_Init();
  95:Src/main.c    ****   /* USER CODE BEGIN 2 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END 2 */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Call init function for freertos objects (in freertos.c) */
 100:Src/main.c    ****   MX_FREERTOS_Init();
 101:Src/main.c    ****   /* Start scheduler */
 102:Src/main.c    ****   osKernelStart();
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 105:Src/main.c    ****   /* Infinite loop */
 106:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 107:Src/main.c    ****   while (1)
 108:Src/main.c    ****   {
 109:Src/main.c    ****     /* USER CODE END WHILE */
 110:Src/main.c    **** 
 111:Src/main.c    ****     /* USER CODE BEGIN 3 */
 112:Src/main.c    ****   }
 113:Src/main.c    ****   /* USER CODE END 3 */
 114:Src/main.c    **** }
 115:Src/main.c    **** 
 116:Src/main.c    **** /**
 117:Src/main.c    ****   * @brief System Clock Configuration
 118:Src/main.c    ****   * @retval None
 119:Src/main.c    ****   */
 120:Src/main.c    **** void SystemClock_Config(void)
 121:Src/main.c    **** {
  30              		.loc 1 121 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 80
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 122:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  34              		.loc 1 122 3 view .LVU1
 121:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  35              		.loc 1 121 1 is_stmt 0 view .LVU2
  36 0000 70B5     		push	{r4, r5, r6, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 14, -4
  43              		.loc 1 122 22 view .LVU3
  44 0002 0023     		movs	r3, #0
 121:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  45              		.loc 1 121 1 view .LVU4
  46 0004 94B0     		sub	sp, sp, #80
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 96
ARM GAS  /tmp/ccvvSAxZ.s 			page 4


  49              		.loc 1 122 22 view .LVU5
  50 0006 CDE90A33 		strd	r3, r3, [sp, #40]
  51 000a CDE90C33 		strd	r3, r3, [sp, #48]
 123:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  52              		.loc 1 123 3 is_stmt 1 view .LVU6
  53              		.loc 1 123 22 is_stmt 0 view .LVU7
  54 000e CDE90433 		strd	r3, r3, [sp, #16]
  55 0012 CDE90633 		strd	r3, r3, [sp, #24]
 124:Src/main.c    **** 
 125:Src/main.c    ****   /** Configure the main internal regulator output voltage
 126:Src/main.c    ****   */
 127:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  56              		.loc 1 127 3 is_stmt 1 view .LVU8
  57              	.LBB14:
  58              		.loc 1 127 3 view .LVU9
  59              		.loc 1 127 3 view .LVU10
  60 0016 2149     		ldr	r1, .L8
  61 0018 0193     		str	r3, [sp, #4]
  62              	.LBE14:
 123:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  63              		.loc 1 123 22 is_stmt 0 view .LVU11
  64 001a 0393     		str	r3, [sp, #12]
  65              	.LBB15:
  66              		.loc 1 127 3 view .LVU12
  67 001c 086C     		ldr	r0, [r1, #64]
  68              	.LBE15:
  69              	.LBB16:
 128:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  70              		.loc 1 128 3 view .LVU13
  71 001e 204A     		ldr	r2, .L8+4
  72              	.LBE16:
  73              	.LBB17:
 127:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  74              		.loc 1 127 3 view .LVU14
  75 0020 40F08050 		orr	r0, r0, #268435456
  76 0024 0864     		str	r0, [r1, #64]
 127:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  77              		.loc 1 127 3 is_stmt 1 view .LVU15
  78 0026 096C     		ldr	r1, [r1, #64]
  79 0028 01F08051 		and	r1, r1, #268435456
  80 002c 0191     		str	r1, [sp, #4]
 127:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  81              		.loc 1 127 3 view .LVU16
  82 002e 0199     		ldr	r1, [sp, #4]
  83              	.LBE17:
 127:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  84              		.loc 1 127 3 view .LVU17
  85              		.loc 1 128 3 view .LVU18
  86              	.LBB18:
  87              		.loc 1 128 3 view .LVU19
  88 0030 0293     		str	r3, [sp, #8]
  89              		.loc 1 128 3 view .LVU20
  90 0032 1368     		ldr	r3, [r2]
  91 0034 43F48043 		orr	r3, r3, #16384
  92 0038 1360     		str	r3, [r2]
  93              		.loc 1 128 3 view .LVU21
  94 003a 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccvvSAxZ.s 			page 5


  95 003c 03F48043 		and	r3, r3, #16384
  96 0040 0293     		str	r3, [sp, #8]
  97              		.loc 1 128 3 view .LVU22
  98              	.LBE18:
 129:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 130:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 131:Src/main.c    ****   */
 132:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  99              		.loc 1 132 36 is_stmt 0 view .LVU23
 100 0042 0122     		movs	r2, #1
 133:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 101              		.loc 1 133 30 view .LVU24
 102 0044 4FF48033 		mov	r3, #65536
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 103              		.loc 1 135 35 view .LVU25
 104 0048 4FF48000 		mov	r0, #4194304
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 105              		.loc 1 134 34 view .LVU26
 106 004c 0224     		movs	r4, #2
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 6;
 107              		.loc 1 136 30 view .LVU27
 108 004e 0621     		movs	r1, #6
 132:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 109              		.loc 1 132 36 view .LVU28
 110 0050 0892     		str	r2, [sp, #32]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 111              		.loc 1 133 30 view .LVU29
 112 0052 0993     		str	r3, [sp, #36]
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 113              		.loc 1 137 30 view .LVU30
 114 0054 A822     		movs	r2, #168
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 115              		.loc 1 139 30 view .LVU31
 116 0056 0723     		movs	r3, #7
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 6;
 117              		.loc 1 135 35 view .LVU32
 118 0058 0F90     		str	r0, [sp, #60]
 140:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 119              		.loc 1 140 7 view .LVU33
 120 005a 08A8     		add	r0, sp, #32
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 121              		.loc 1 137 30 view .LVU34
 122 005c CDE91012 		strd	r1, r2, [sp, #64]
 123              	.LBB19:
 128:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 124              		.loc 1 128 3 view .LVU35
 125 0060 029D     		ldr	r5, [sp, #8]
 126              	.LBE19:
 128:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 127              		.loc 1 128 3 is_stmt 1 view .LVU36
 132:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 128              		.loc 1 132 3 view .LVU37
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 129              		.loc 1 133 3 view .LVU38
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  /tmp/ccvvSAxZ.s 			page 6


 130              		.loc 1 134 3 view .LVU39
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 131              		.loc 1 134 34 is_stmt 0 view .LVU40
 132 0062 0E94     		str	r4, [sp, #56]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 6;
 133              		.loc 1 135 3 is_stmt 1 view .LVU41
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 134              		.loc 1 136 3 view .LVU42
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 135              		.loc 1 138 3 view .LVU43
 139:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 136              		.loc 1 139 3 view .LVU44
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 137              		.loc 1 138 30 is_stmt 0 view .LVU45
 138 0064 1294     		str	r4, [sp, #72]
 139:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 139              		.loc 1 139 30 view .LVU46
 140 0066 1393     		str	r3, [sp, #76]
 141              		.loc 1 140 3 is_stmt 1 view .LVU47
 142              		.loc 1 140 7 is_stmt 0 view .LVU48
 143 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 144              	.LVL0:
 145              		.loc 1 140 6 view .LVU49
 146 006c 08B1     		cbz	r0, .L2
 141:Src/main.c    ****   {
 142:Src/main.c    ****     Error_Handler();
 147              		.loc 1 142 5 is_stmt 1 view .LVU50
 148              	.LBB20:
 149              	.LBI20:
 143:Src/main.c    ****   }
 144:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Src/main.c    ****   */
 146:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 151:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 152:Src/main.c    **** 
 153:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     Error_Handler();
 156:Src/main.c    ****   }
 157:Src/main.c    **** }
 158:Src/main.c    **** 
 159:Src/main.c    **** /* USER CODE BEGIN 4 */
 160:Src/main.c    **** 
 161:Src/main.c    **** /* USER CODE END 4 */
 162:Src/main.c    **** 
 163:Src/main.c    ****  /**
 164:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 165:Src/main.c    ****   * @note   This function is called  when TIM2 interrupt took place, inside
 166:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 167:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 168:Src/main.c    ****   * @param  htim : TIM handle
 169:Src/main.c    ****   * @retval None
 170:Src/main.c    ****   */
ARM GAS  /tmp/ccvvSAxZ.s 			page 7


 171:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 172:Src/main.c    **** {
 173:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 174:Src/main.c    **** 
 175:Src/main.c    ****   /* USER CODE END Callback 0 */
 176:Src/main.c    ****   if (htim->Instance == TIM2) {
 177:Src/main.c    ****     HAL_IncTick();
 178:Src/main.c    ****   }
 179:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* USER CODE END Callback 1 */
 182:Src/main.c    **** }
 183:Src/main.c    **** 
 184:Src/main.c    **** /**
 185:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 186:Src/main.c    ****   * @retval None
 187:Src/main.c    ****   */
 188:Src/main.c    **** void Error_Handler(void)
 150              		.loc 1 188 6 view .LVU51
 151              	.LBE20:
 189:Src/main.c    **** {
 190:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 191:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 192:Src/main.c    ****   __disable_irq();
 152              		.loc 1 192 3 view .LVU52
 153              	.LBB23:
 154              	.LBB21:
 155              	.LBI21:
 156              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccvvSAxZ.s 			page 8


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccvvSAxZ.s 			page 9


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 157              		.loc 2 140 27 view .LVU53
 158              	.LBB22:
ARM GAS  /tmp/ccvvSAxZ.s 			page 10


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 159              		.loc 2 142 3 view .LVU54
 160              		.syntax unified
 161              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 162 006e 72B6     		cpsid i
 163              	@ 0 "" 2
 164              		.thumb
 165              		.syntax unified
 166              	.L3:
 167              	.LBE22:
 168              	.LBE21:
 169              	.LBE23:
 193:Src/main.c    ****   while (1)
 170              		.loc 1 193 3 view .LVU55
 194:Src/main.c    ****   {
 195:Src/main.c    ****   }
 171              		.loc 1 195 3 view .LVU56
 193:Src/main.c    ****   while (1)
 172              		.loc 1 193 9 view .LVU57
 193:Src/main.c    ****   while (1)
 173              		.loc 1 193 3 view .LVU58
 174              		.loc 1 195 3 view .LVU59
 193:Src/main.c    ****   while (1)
 175              		.loc 1 193 9 view .LVU60
 176 0070 FEE7     		b	.L3
 177              	.L2:
 146:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 178              		.loc 1 146 3 view .LVU61
 179 0072 0346     		mov	r3, r0
 146:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 180              		.loc 1 146 31 is_stmt 0 view .LVU62
 181 0074 0F26     		movs	r6, #15
 150:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 182              		.loc 1 150 36 view .LVU63
 183 0076 4FF4A055 		mov	r5, #5120
 151:Src/main.c    **** 
 184              		.loc 1 151 36 view .LVU64
 185 007a 4FF48052 		mov	r2, #4096
 153:Src/main.c    ****   {
 186              		.loc 1 153 7 view .LVU65
 187 007e 03A8     		add	r0, sp, #12
 188 0080 0521     		movs	r1, #5
 151:Src/main.c    **** 
 189              		.loc 1 151 36 view .LVU66
 190 0082 CDE90652 		strd	r5, r2, [sp, #24]
 148:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 191              		.loc 1 148 34 view .LVU67
 192 0086 0494     		str	r4, [sp, #16]
 149:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 193              		.loc 1 149 35 view .LVU68
 194 0088 0593     		str	r3, [sp, #20]
 146:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 195              		.loc 1 146 31 view .LVU69
 196 008a 0396     		str	r6, [sp, #12]
 148:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 197              		.loc 1 148 3 is_stmt 1 view .LVU70
ARM GAS  /tmp/ccvvSAxZ.s 			page 11


 149:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 198              		.loc 1 149 3 view .LVU71
 150:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 199              		.loc 1 150 3 view .LVU72
 153:Src/main.c    ****   {
 200              		.loc 1 153 3 view .LVU73
 153:Src/main.c    ****   {
 201              		.loc 1 153 7 is_stmt 0 view .LVU74
 202 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 203              	.LVL1:
 153:Src/main.c    ****   {
 204              		.loc 1 153 6 view .LVU75
 205 0090 08B1     		cbz	r0, .L1
 155:Src/main.c    ****   }
 206              		.loc 1 155 5 is_stmt 1 view .LVU76
 207              	.LBB24:
 208              	.LBI24:
 188:Src/main.c    **** {
 209              		.loc 1 188 6 view .LVU77
 210              	.LBE24:
 192:Src/main.c    ****   while (1)
 211              		.loc 1 192 3 view .LVU78
 212              	.LBB27:
 213              	.LBB25:
 214              	.LBI25:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215              		.loc 2 140 27 view .LVU79
 216              	.LBB26:
 217              		.loc 2 142 3 view .LVU80
 218              		.syntax unified
 219              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 220 0092 72B6     		cpsid i
 221              	@ 0 "" 2
 222              		.thumb
 223              		.syntax unified
 224              	.L5:
 225              	.LBE26:
 226              	.LBE25:
 227              	.LBE27:
 193:Src/main.c    ****   {
 228              		.loc 1 193 3 view .LVU81
 229              		.loc 1 195 3 view .LVU82
 193:Src/main.c    ****   {
 230              		.loc 1 193 9 view .LVU83
 193:Src/main.c    ****   {
 231              		.loc 1 193 3 view .LVU84
 232              		.loc 1 195 3 view .LVU85
 193:Src/main.c    ****   {
 233              		.loc 1 193 9 view .LVU86
 234 0094 FEE7     		b	.L5
 235              	.L1:
 157:Src/main.c    **** 
 236              		.loc 1 157 1 is_stmt 0 view .LVU87
 237 0096 14B0     		add	sp, sp, #80
 238              	.LCFI2:
 239              		.cfi_def_cfa_offset 16
 240              		@ sp needed
ARM GAS  /tmp/ccvvSAxZ.s 			page 12


 241 0098 70BD     		pop	{r4, r5, r6, pc}
 242              	.L9:
 243 009a 00BF     		.align	2
 244              	.L8:
 245 009c 00380240 		.word	1073887232
 246 00a0 00700040 		.word	1073770496
 247              		.cfi_endproc
 248              	.LFE140:
 250              		.section	.text.startup.main,"ax",%progbits
 251              		.align	1
 252              		.p2align 2,,3
 253              		.global	main
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	main:
 260              	.LFB139:
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
 261              		.loc 1 70 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ Volatile: function does not return.
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
  78:Src/main.c    **** 
 266              		.loc 1 78 3 view .LVU89
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
 267              		.loc 1 70 1 is_stmt 0 view .LVU90
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI3:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
  78:Src/main.c    **** 
 273              		.loc 1 78 3 view .LVU91
 274 0002 FFF7FEFF 		bl	HAL_Init
 275              	.LVL2:
  85:Src/main.c    **** 
 276              		.loc 1 85 3 is_stmt 1 view .LVU92
 277 0006 FFF7FEFF 		bl	SystemClock_Config
 278              	.LVL3:
  92:Src/main.c    ****   MX_I2C2_Init();
 279              		.loc 1 92 3 view .LVU93
 280 000a FFF7FEFF 		bl	MX_GPIO_Init
 281              	.LVL4:
  93:Src/main.c    ****   MX_SPI1_Init();
 282              		.loc 1 93 3 view .LVU94
 283 000e FFF7FEFF 		bl	MX_I2C2_Init
 284              	.LVL5:
  94:Src/main.c    ****   /* USER CODE BEGIN 2 */
 285              		.loc 1 94 3 view .LVU95
 286 0012 FFF7FEFF 		bl	MX_SPI1_Init
 287              	.LVL6:
 100:Src/main.c    ****   /* Start scheduler */
 288              		.loc 1 100 3 view .LVU96
 289 0016 FFF7FEFF 		bl	MX_FREERTOS_Init
 290              	.LVL7:
ARM GAS  /tmp/ccvvSAxZ.s 			page 13


 102:Src/main.c    **** 
 291              		.loc 1 102 3 view .LVU97
 292 001a FFF7FEFF 		bl	osKernelStart
 293              	.LVL8:
 294              	.L11:
 107:Src/main.c    ****   {
 295              		.loc 1 107 3 discriminator 1 view .LVU98
 112:Src/main.c    ****   /* USER CODE END 3 */
 296              		.loc 1 112 3 discriminator 1 view .LVU99
 107:Src/main.c    ****   {
 297              		.loc 1 107 9 discriminator 1 view .LVU100
 107:Src/main.c    ****   {
 298              		.loc 1 107 3 discriminator 1 view .LVU101
 112:Src/main.c    ****   /* USER CODE END 3 */
 299              		.loc 1 112 3 discriminator 1 view .LVU102
 107:Src/main.c    ****   {
 300              		.loc 1 107 9 discriminator 1 view .LVU103
 301 001e FEE7     		b	.L11
 302              		.cfi_endproc
 303              	.LFE139:
 305              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 306              		.align	1
 307              		.p2align 2,,3
 308              		.global	HAL_TIM_PeriodElapsedCallback
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv4-sp-d16
 314              	HAL_TIM_PeriodElapsedCallback:
 315              	.LVL9:
 316              	.LFB141:
 172:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 317              		.loc 1 172 1 view -0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 176:Src/main.c    ****     HAL_IncTick();
 322              		.loc 1 176 3 view .LVU105
 176:Src/main.c    ****     HAL_IncTick();
 323              		.loc 1 176 6 is_stmt 0 view .LVU106
 324 0000 0368     		ldr	r3, [r0]
 325 0002 B3F1804F 		cmp	r3, #1073741824
 326 0006 00D0     		beq	.L15
 182:Src/main.c    **** 
 327              		.loc 1 182 1 view .LVU107
 328 0008 7047     		bx	lr
 329              	.L15:
 177:Src/main.c    ****   }
 330              		.loc 1 177 5 is_stmt 1 view .LVU108
 331 000a FFF7FEBF 		b	HAL_IncTick
 332              	.LVL10:
 177:Src/main.c    ****   }
 333              		.loc 1 177 5 is_stmt 0 view .LVU109
 334              		.cfi_endproc
 335              	.LFE141:
 337 000e 00BF     		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  /tmp/ccvvSAxZ.s 			page 14


 338              		.align	1
 339              		.p2align 2,,3
 340              		.global	Error_Handler
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	Error_Handler:
 347              	.LFB142:
 189:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 348              		.loc 1 189 1 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ Volatile: function does not return.
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 192:Src/main.c    ****   while (1)
 354              		.loc 1 192 3 view .LVU111
 355              	.LBB28:
 356              	.LBI28:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 357              		.loc 2 140 27 view .LVU112
 358              	.LBB29:
 359              		.loc 2 142 3 view .LVU113
 360              		.syntax unified
 361              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 362 0000 72B6     		cpsid i
 363              	@ 0 "" 2
 364              		.thumb
 365              		.syntax unified
 366              	.L17:
 367              	.LBE29:
 368              	.LBE28:
 193:Src/main.c    ****   {
 369              		.loc 1 193 3 discriminator 1 view .LVU114
 370              		.loc 1 195 3 discriminator 1 view .LVU115
 193:Src/main.c    ****   {
 371              		.loc 1 193 9 discriminator 1 view .LVU116
 193:Src/main.c    ****   {
 372              		.loc 1 193 3 discriminator 1 view .LVU117
 373              		.loc 1 195 3 discriminator 1 view .LVU118
 193:Src/main.c    ****   {
 374              		.loc 1 193 9 discriminator 1 view .LVU119
 375 0002 FEE7     		b	.L17
 376              		.cfi_endproc
 377              	.LFE142:
 379              		.text
 380              	.Letext0:
 381              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
 382              		.file 4 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 383              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 384              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 385              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 386              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 387              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 388              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 389              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
ARM GAS  /tmp/ccvvSAxZ.s 			page 15


 390              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 391              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 392              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 393              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 394              		.file 16 "Inc/i2c.h"
 395              		.file 17 "Inc/spi.h"
 396              		.file 18 "/opt/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h"
 397              		.file 19 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_types.h"
 398              		.file 20 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/reent.h"
 399              		.file 21 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/lock.h"
 400              		.file 22 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/stdlib.h"
 401              		.file 23 "Inc/gpio.h"
 402              		.file 24 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccvvSAxZ.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccvvSAxZ.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccvvSAxZ.s:27     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccvvSAxZ.s:245    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccvvSAxZ.s:251    .text.startup.main:0000000000000000 $t
     /tmp/ccvvSAxZ.s:259    .text.startup.main:0000000000000000 main
     /tmp/ccvvSAxZ.s:306    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccvvSAxZ.s:314    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccvvSAxZ.s:338    .text.Error_Handler:0000000000000000 $t
     /tmp/ccvvSAxZ.s:346    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_I2C2_Init
MX_SPI1_Init
MX_FREERTOS_Init
osKernelStart
HAL_IncTick

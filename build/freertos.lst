ARM GAS  /tmp/ccPV6Jg7.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 64656661 		.ascii	"defaultTask\000"
  17      756C7454 
  17      61736B00 
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.StartDefaultTask,"ax",%progbits
  22              		.align	1
  23              		.p2align 2,,3
  24              		.global	StartDefaultTask
  25              		.arch armv7e-m
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  29              		.fpu fpv4-sp-d16
  31              	StartDefaultTask:
  32              	.LVL0:
  33              	.LFB137:
  34              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Src/freertos.c **** /**
   3:Src/freertos.c ****   ******************************************************************************
   4:Src/freertos.c ****   * File Name          : freertos.c
   5:Src/freertos.c ****   * Description        : Code for freertos applications
   6:Src/freertos.c ****   ******************************************************************************
   7:Src/freertos.c ****   * @attention
   8:Src/freertos.c ****   *
   9:Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/freertos.c ****   * All rights reserved.</center></h2>
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Src/freertos.c ****   *                             www.st.com/SLA0044
  16:Src/freertos.c ****   *
  17:Src/freertos.c ****   ******************************************************************************
  18:Src/freertos.c ****   */
  19:Src/freertos.c **** /* USER CODE END Header */
  20:Src/freertos.c **** 
  21:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/freertos.c **** #include "FreeRTOS.h"
ARM GAS  /tmp/ccPV6Jg7.s 			page 2


  23:Src/freertos.c **** #include "task.h"
  24:Src/freertos.c **** #include "main.h"
  25:Src/freertos.c **** #include "cmsis_os.h"
  26:Src/freertos.c **** 
  27:Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Src/freertos.c **** 
  30:Src/freertos.c **** /* USER CODE END Includes */
  31:Src/freertos.c **** 
  32:Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  33:Src/freertos.c **** /* USER CODE BEGIN PTD */
  34:Src/freertos.c **** 
  35:Src/freertos.c **** /* USER CODE END PTD */
  36:Src/freertos.c **** 
  37:Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  38:Src/freertos.c **** /* USER CODE BEGIN PD */
  39:Src/freertos.c **** 
  40:Src/freertos.c **** /* USER CODE END PD */
  41:Src/freertos.c **** 
  42:Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  43:Src/freertos.c **** /* USER CODE BEGIN PM */
  44:Src/freertos.c **** 
  45:Src/freertos.c **** /* USER CODE END PM */
  46:Src/freertos.c **** 
  47:Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  48:Src/freertos.c **** /* USER CODE BEGIN Variables */
  49:Src/freertos.c **** 
  50:Src/freertos.c **** /* USER CODE END Variables */
  51:Src/freertos.c **** osThreadId defaultTaskHandle;
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  54:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  55:Src/freertos.c **** 
  56:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  57:Src/freertos.c **** 
  58:Src/freertos.c **** void StartDefaultTask(void const * argument);
  59:Src/freertos.c **** 
  60:Src/freertos.c **** extern void MX_USB_DEVICE_Init(void);
  61:Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  62:Src/freertos.c **** 
  63:Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  64:Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  65:Src/freertos.c **** 
  66:Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  67:Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  68:Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  69:Src/freertos.c **** 
  70:Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  71:Src/freertos.c **** {
  72:Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  73:Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  74:Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  75:Src/freertos.c ****   /* place for user code */
  76:Src/freertos.c **** }
  77:Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  78:Src/freertos.c **** 
  79:Src/freertos.c **** /**
ARM GAS  /tmp/ccPV6Jg7.s 			page 3


  80:Src/freertos.c ****   * @brief  FreeRTOS initialization
  81:Src/freertos.c ****   * @param  None
  82:Src/freertos.c ****   * @retval None
  83:Src/freertos.c ****   */
  84:Src/freertos.c **** void MX_FREERTOS_Init(void) {
  85:Src/freertos.c ****   /* USER CODE BEGIN Init */
  86:Src/freertos.c **** 
  87:Src/freertos.c ****   /* USER CODE END Init */
  88:Src/freertos.c **** 
  89:Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  90:Src/freertos.c ****   /* add mutexes, ... */
  91:Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  92:Src/freertos.c **** 
  93:Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  94:Src/freertos.c ****   /* add semaphores, ... */
  95:Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  96:Src/freertos.c **** 
  97:Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  98:Src/freertos.c ****   /* start timers, add new ones, ... */
  99:Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 100:Src/freertos.c **** 
 101:Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 102:Src/freertos.c ****   /* add queues, ... */
 103:Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 104:Src/freertos.c **** 
 105:Src/freertos.c ****   /* Create the thread(s) */
 106:Src/freertos.c ****   /* definition and creation of defaultTask */
 107:Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 108:Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 109:Src/freertos.c **** 
 110:Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 111:Src/freertos.c ****   /* add threads, ... */
 112:Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 113:Src/freertos.c **** 
 114:Src/freertos.c **** }
 115:Src/freertos.c **** 
 116:Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 117:Src/freertos.c **** /**
 118:Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 119:Src/freertos.c ****   * @param  argument: Not used
 120:Src/freertos.c ****   * @retval None
 121:Src/freertos.c ****   */
 122:Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 123:Src/freertos.c **** void StartDefaultTask(void const * argument)
 124:Src/freertos.c **** {
  35              		.loc 1 124 1 view -0
  36              		.cfi_startproc
  37              		@ Volatile: function does not return.
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 0, uses_anonymous_args = 0
 125:Src/freertos.c ****   /* init code for USB_DEVICE */
 126:Src/freertos.c ****   MX_USB_DEVICE_Init();
  40              		.loc 1 126 3 view .LVU1
 124:Src/freertos.c ****   /* init code for USB_DEVICE */
  41              		.loc 1 124 1 is_stmt 0 view .LVU2
  42 0000 08B5     		push	{r3, lr}
  43              	.LCFI0:
ARM GAS  /tmp/ccPV6Jg7.s 			page 4


  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 3, -8
  46              		.cfi_offset 14, -4
  47              		.loc 1 126 3 view .LVU3
  48 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
  49              	.LVL1:
  50              	.L2:
 127:Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 128:Src/freertos.c ****   /* Infinite loop */
 129:Src/freertos.c ****   for(;;)
  51              		.loc 1 129 3 is_stmt 1 discriminator 1 view .LVU4
 130:Src/freertos.c ****   {
 131:Src/freertos.c ****     osDelay(1);
  52              		.loc 1 131 5 discriminator 1 view .LVU5
  53 0006 0120     		movs	r0, #1
  54 0008 FFF7FEFF 		bl	osDelay
  55              	.LVL2:
 129:Src/freertos.c ****   {
  56              		.loc 1 129 8 discriminator 1 view .LVU6
  57 000c FBE7     		b	.L2
  58              		.cfi_endproc
  59              	.LFE137:
  61 000e 00BF     		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  62              		.align	1
  63              		.p2align 2,,3
  64              		.global	vApplicationGetIdleTaskMemory
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	vApplicationGetIdleTaskMemory:
  71              	.LVL3:
  72              	.LFB135:
  71:Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  73              		.loc 1 71 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  72:Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  78              		.loc 1 72 3 view .LVU8
  72:Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  79              		.loc 1 72 25 is_stmt 0 view .LVU9
  80 0000 044B     		ldr	r3, .L7
  81 0002 0360     		str	r3, [r0]
  73:Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  82              		.loc 1 73 3 is_stmt 1 view .LVU10
  71:Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  83              		.loc 1 71 1 is_stmt 0 view .LVU11
  84 0004 10B4     		push	{r4}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 4, -4
  74:Src/freertos.c ****   /* place for user code */
  88              		.loc 1 74 25 view .LVU12
  89 0006 8023     		movs	r3, #128
  73:Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
ARM GAS  /tmp/ccPV6Jg7.s 			page 5


  90              		.loc 1 73 27 view .LVU13
  91 0008 034C     		ldr	r4, .L7+4
  92 000a 0C60     		str	r4, [r1]
  74:Src/freertos.c ****   /* place for user code */
  93              		.loc 1 74 3 is_stmt 1 view .LVU14
  76:Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  94              		.loc 1 76 1 is_stmt 0 view .LVU15
  95 000c 5DF8044B 		ldr	r4, [sp], #4
  96              	.LCFI2:
  97              		.cfi_restore 4
  98              		.cfi_def_cfa_offset 0
  74:Src/freertos.c ****   /* place for user code */
  99              		.loc 1 74 25 view .LVU16
 100 0010 1360     		str	r3, [r2]
  76:Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 101              		.loc 1 76 1 view .LVU17
 102 0012 7047     		bx	lr
 103              	.L8:
 104              		.align	2
 105              	.L7:
 106 0014 00000000 		.word	.LANCHOR0
 107 0018 00000000 		.word	.LANCHOR1
 108              		.cfi_endproc
 109              	.LFE135:
 111              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 112              		.align	1
 113              		.p2align 2,,3
 114              		.global	MX_FREERTOS_Init
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu fpv4-sp-d16
 120              	MX_FREERTOS_Init:
 121              	.LFB136:
  84:Src/freertos.c ****   /* USER CODE BEGIN Init */
 122              		.loc 1 84 29 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 32
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 107:Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 126              		.loc 1 107 3 view .LVU19
  84:Src/freertos.c ****   /* USER CODE BEGIN Init */
 127              		.loc 1 84 29 is_stmt 0 view .LVU20
 128 0000 30B5     		push	{r4, r5, lr}
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 12
 131              		.cfi_offset 4, -12
 132              		.cfi_offset 5, -8
 133              		.cfi_offset 14, -4
 107:Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 134              		.loc 1 107 3 view .LVU21
 135 0002 084D     		ldr	r5, .L11
 136 0004 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
  84:Src/freertos.c ****   /* USER CODE BEGIN Init */
 137              		.loc 1 84 29 view .LVU22
 138 0006 89B0     		sub	sp, sp, #36
 139              	.LCFI4:
ARM GAS  /tmp/ccPV6Jg7.s 			page 6


 140              		.cfi_def_cfa_offset 48
 107:Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 141              		.loc 1 107 3 view .LVU23
 142 0008 01AC     		add	r4, sp, #4
 143 000a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 144 000c 95E80700 		ldm	r5, {r0, r1, r2}
 145 0010 84E80700 		stm	r4, {r0, r1, r2}
 108:Src/freertos.c **** 
 146              		.loc 1 108 3 is_stmt 1 view .LVU24
 108:Src/freertos.c **** 
 147              		.loc 1 108 23 is_stmt 0 view .LVU25
 148 0014 0021     		movs	r1, #0
 149 0016 01A8     		add	r0, sp, #4
 150 0018 FFF7FEFF 		bl	osThreadCreate
 151              	.LVL4:
 108:Src/freertos.c **** 
 152              		.loc 1 108 21 view .LVU26
 153 001c 024B     		ldr	r3, .L11+4
 154 001e 1860     		str	r0, [r3]
 114:Src/freertos.c **** 
 155              		.loc 1 114 1 view .LVU27
 156 0020 09B0     		add	sp, sp, #36
 157              	.LCFI5:
 158              		.cfi_def_cfa_offset 12
 159              		@ sp needed
 160 0022 30BD     		pop	{r4, r5, pc}
 161              	.L12:
 162              		.align	2
 163              	.L11:
 164 0024 00000000 		.word	.LANCHOR2
 165 0028 00000000 		.word	defaultTaskHandle
 166              		.cfi_endproc
 167              	.LFE136:
 169              		.comm	defaultTaskHandle,4,4
 170              		.section	.rodata
 171              		.align	2
 172              		.set	.LANCHOR2,. + 0
 173              	.LC2:
 174 0000 00000000 		.word	.LC0
 175 0004 00000000 		.word	StartDefaultTask
 176 0008 0000     		.short	0
 177 000a 0000     		.space	2
 178 000c 00000000 		.word	0
 179 0010 80000000 		.word	128
 180 0014 00000000 		.word	0
 181 0018 00000000 		.word	0
 182              		.section	.bss.xIdleStack,"aw",%nobits
 183              		.align	2
 184              		.set	.LANCHOR1,. + 0
 187              	xIdleStack:
 188 0000 00000000 		.space	512
 188      00000000 
 188      00000000 
 188      00000000 
 188      00000000 
 189              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 190              		.align	2
ARM GAS  /tmp/ccPV6Jg7.s 			page 7


 191              		.set	.LANCHOR0,. + 0
 194              	xIdleTaskTCBBuffer:
 195 0000 00000000 		.space	84
 195      00000000 
 195      00000000 
 195      00000000 
 195      00000000 
 196              		.text
 197              	.Letext0:
 198              		.file 2 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
 199              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 200              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 201              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 202              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 203              		.file 7 "Inc/FreeRTOSConfig.h"
 204              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 205              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 206              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 207              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccPV6Jg7.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccPV6Jg7.s:15     .rodata.str1.4:0000000000000000 $d
     /tmp/ccPV6Jg7.s:22     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccPV6Jg7.s:31     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccPV6Jg7.s:62     .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/ccPV6Jg7.s:70     .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/ccPV6Jg7.s:106    .text.vApplicationGetIdleTaskMemory:0000000000000014 $d
     /tmp/ccPV6Jg7.s:112    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccPV6Jg7.s:120    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccPV6Jg7.s:164    .text.MX_FREERTOS_Init:0000000000000024 $d
                            *COM*:0000000000000004 defaultTaskHandle
     /tmp/ccPV6Jg7.s:171    .rodata:0000000000000000 $d
     /tmp/ccPV6Jg7.s:183    .bss.xIdleStack:0000000000000000 $d
     /tmp/ccPV6Jg7.s:187    .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/ccPV6Jg7.s:190    .bss.xIdleTaskTCBBuffer:0000000000000000 $d
     /tmp/ccPV6Jg7.s:194    .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer

UNDEFINED SYMBOLS
MX_USB_DEVICE_Init
osDelay
osThreadCreate

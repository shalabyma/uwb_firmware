ARM GAS  /tmp/ccVb2qcF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_cdc_if.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CDC_DeInit_FS,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	CDC_DeInit_FS:
  27              	.LFB135:
  28              		.file 1 "Src/usbd_cdc_if.c"
   1:Src/usbd_cdc_if.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_cdc_if.c **** /**
   3:Src/usbd_cdc_if.c ****   ******************************************************************************
   4:Src/usbd_cdc_if.c ****   * @file           : usbd_cdc_if.c
   5:Src/usbd_cdc_if.c ****   * @version        : v1.0_Cube
   6:Src/usbd_cdc_if.c ****   * @brief          : Usb device for Virtual Com Port.
   7:Src/usbd_cdc_if.c ****   ******************************************************************************
   8:Src/usbd_cdc_if.c ****   * @attention
   9:Src/usbd_cdc_if.c ****   *
  10:Src/usbd_cdc_if.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  11:Src/usbd_cdc_if.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_cdc_if.c ****   *
  13:Src/usbd_cdc_if.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_cdc_if.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_cdc_if.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_cdc_if.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_cdc_if.c ****   *
  18:Src/usbd_cdc_if.c ****   ******************************************************************************
  19:Src/usbd_cdc_if.c ****   */
  20:Src/usbd_cdc_if.c **** /* USER CODE END Header */
  21:Src/usbd_cdc_if.c **** 
  22:Src/usbd_cdc_if.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_cdc_if.c **** #include "usbd_cdc_if.h"
  24:Src/usbd_cdc_if.c **** 
  25:Src/usbd_cdc_if.c **** /* USER CODE BEGIN INCLUDE */
  26:Src/usbd_cdc_if.c **** 
  27:Src/usbd_cdc_if.c **** /* USER CODE END INCLUDE */
  28:Src/usbd_cdc_if.c **** 
  29:Src/usbd_cdc_if.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/usbd_cdc_if.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccVb2qcF.s 			page 2


  31:Src/usbd_cdc_if.c **** /* Private macro -------------------------------------------------------------*/
  32:Src/usbd_cdc_if.c **** 
  33:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PV */
  34:Src/usbd_cdc_if.c **** /* Private variables ---------------------------------------------------------*/
  35:Src/usbd_cdc_if.c **** 
  36:Src/usbd_cdc_if.c **** /* USER CODE END PV */
  37:Src/usbd_cdc_if.c **** 
  38:Src/usbd_cdc_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  39:Src/usbd_cdc_if.c ****   * @brief Usb device library.
  40:Src/usbd_cdc_if.c ****   * @{
  41:Src/usbd_cdc_if.c ****   */
  42:Src/usbd_cdc_if.c **** 
  43:Src/usbd_cdc_if.c **** /** @addtogroup USBD_CDC_IF
  44:Src/usbd_cdc_if.c ****   * @{
  45:Src/usbd_cdc_if.c ****   */
  46:Src/usbd_cdc_if.c **** 
  47:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_TypesDefinitions USBD_CDC_IF_Private_TypesDefinitions
  48:Src/usbd_cdc_if.c ****   * @brief Private types.
  49:Src/usbd_cdc_if.c ****   * @{
  50:Src/usbd_cdc_if.c ****   */
  51:Src/usbd_cdc_if.c **** 
  52:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  53:Src/usbd_cdc_if.c **** 
  54:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_TYPES */
  55:Src/usbd_cdc_if.c **** 
  56:Src/usbd_cdc_if.c **** /**
  57:Src/usbd_cdc_if.c ****   * @}
  58:Src/usbd_cdc_if.c ****   */
  59:Src/usbd_cdc_if.c **** 
  60:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Defines USBD_CDC_IF_Private_Defines
  61:Src/usbd_cdc_if.c ****   * @brief Private defines.
  62:Src/usbd_cdc_if.c ****   * @{
  63:Src/usbd_cdc_if.c ****   */
  64:Src/usbd_cdc_if.c **** 
  65:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  66:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_DEFINES */
  67:Src/usbd_cdc_if.c **** 
  68:Src/usbd_cdc_if.c **** /**
  69:Src/usbd_cdc_if.c ****   * @}
  70:Src/usbd_cdc_if.c ****   */
  71:Src/usbd_cdc_if.c **** 
  72:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Macros USBD_CDC_IF_Private_Macros
  73:Src/usbd_cdc_if.c ****   * @brief Private macros.
  74:Src/usbd_cdc_if.c ****   * @{
  75:Src/usbd_cdc_if.c ****   */
  76:Src/usbd_cdc_if.c **** 
  77:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  78:Src/usbd_cdc_if.c **** 
  79:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_MACRO */
  80:Src/usbd_cdc_if.c **** 
  81:Src/usbd_cdc_if.c **** /**
  82:Src/usbd_cdc_if.c ****   * @}
  83:Src/usbd_cdc_if.c ****   */
  84:Src/usbd_cdc_if.c **** 
  85:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Variables USBD_CDC_IF_Private_Variables
  86:Src/usbd_cdc_if.c ****   * @brief Private variables.
  87:Src/usbd_cdc_if.c ****   * @{
ARM GAS  /tmp/ccVb2qcF.s 			page 3


  88:Src/usbd_cdc_if.c ****   */
  89:Src/usbd_cdc_if.c **** /* Create buffer for reception and transmission           */
  90:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  91:Src/usbd_cdc_if.c **** /** Received data over USB are stored in this buffer      */
  92:Src/usbd_cdc_if.c **** uint8_t UserRxBufferFS[APP_RX_DATA_SIZE];
  93:Src/usbd_cdc_if.c **** 
  94:Src/usbd_cdc_if.c **** /** Data to send over USB CDC are stored in this buffer   */
  95:Src/usbd_cdc_if.c **** uint8_t UserTxBufferFS[APP_TX_DATA_SIZE];
  96:Src/usbd_cdc_if.c **** 
  97:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
  98:Src/usbd_cdc_if.c **** 
  99:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 100:Src/usbd_cdc_if.c **** 
 101:Src/usbd_cdc_if.c **** /**
 102:Src/usbd_cdc_if.c ****   * @}
 103:Src/usbd_cdc_if.c ****   */
 104:Src/usbd_cdc_if.c **** 
 105:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Exported_Variables USBD_CDC_IF_Exported_Variables
 106:Src/usbd_cdc_if.c ****   * @brief Public variables.
 107:Src/usbd_cdc_if.c ****   * @{
 108:Src/usbd_cdc_if.c ****   */
 109:Src/usbd_cdc_if.c **** 
 110:Src/usbd_cdc_if.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
 111:Src/usbd_cdc_if.c **** 
 112:Src/usbd_cdc_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 113:Src/usbd_cdc_if.c **** 
 114:Src/usbd_cdc_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 115:Src/usbd_cdc_if.c **** 
 116:Src/usbd_cdc_if.c **** /**
 117:Src/usbd_cdc_if.c ****   * @}
 118:Src/usbd_cdc_if.c ****   */
 119:Src/usbd_cdc_if.c **** 
 120:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_FunctionPrototypes USBD_CDC_IF_Private_FunctionPrototypes
 121:Src/usbd_cdc_if.c ****   * @brief Private functions declaration.
 122:Src/usbd_cdc_if.c ****   * @{
 123:Src/usbd_cdc_if.c ****   */
 124:Src/usbd_cdc_if.c **** 
 125:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void);
 126:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void);
 127:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length);
 128:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* pbuf, uint32_t *Len);
 129:Src/usbd_cdc_if.c **** static int8_t CDC_TransmitCplt_FS(uint8_t *pbuf, uint32_t *Len, uint8_t epnum);
 130:Src/usbd_cdc_if.c **** 
 131:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 132:Src/usbd_cdc_if.c **** 
 133:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 134:Src/usbd_cdc_if.c **** 
 135:Src/usbd_cdc_if.c **** /**
 136:Src/usbd_cdc_if.c ****   * @}
 137:Src/usbd_cdc_if.c ****   */
 138:Src/usbd_cdc_if.c **** 
 139:Src/usbd_cdc_if.c **** USBD_CDC_ItfTypeDef USBD_Interface_fops_FS =
 140:Src/usbd_cdc_if.c **** {
 141:Src/usbd_cdc_if.c ****   CDC_Init_FS,
 142:Src/usbd_cdc_if.c ****   CDC_DeInit_FS,
 143:Src/usbd_cdc_if.c ****   CDC_Control_FS,
 144:Src/usbd_cdc_if.c ****   CDC_Receive_FS,
ARM GAS  /tmp/ccVb2qcF.s 			page 4


 145:Src/usbd_cdc_if.c ****   CDC_TransmitCplt_FS
 146:Src/usbd_cdc_if.c **** };
 147:Src/usbd_cdc_if.c **** 
 148:Src/usbd_cdc_if.c **** /* Private functions ---------------------------------------------------------*/
 149:Src/usbd_cdc_if.c **** /**
 150:Src/usbd_cdc_if.c ****   * @brief  Initializes the CDC media low layer over the FS USB IP
 151:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 152:Src/usbd_cdc_if.c ****   */
 153:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void)
 154:Src/usbd_cdc_if.c **** {
 155:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 156:Src/usbd_cdc_if.c ****   /* Set Application Buffers */
 157:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 158:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 159:Src/usbd_cdc_if.c ****   return (USBD_OK);
 160:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */
 161:Src/usbd_cdc_if.c **** }
 162:Src/usbd_cdc_if.c **** 
 163:Src/usbd_cdc_if.c **** /**
 164:Src/usbd_cdc_if.c ****   * @brief  DeInitializes the CDC media low layer
 165:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 166:Src/usbd_cdc_if.c ****   */
 167:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void)
 168:Src/usbd_cdc_if.c **** {
  29              		.loc 1 168 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 169:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 4 */
 170:Src/usbd_cdc_if.c ****   return (USBD_OK);
  34              		.loc 1 170 3 view .LVU1
 171:Src/usbd_cdc_if.c ****   /* USER CODE END 4 */
 172:Src/usbd_cdc_if.c **** }
  35              		.loc 1 172 1 is_stmt 0 view .LVU2
  36 0000 0020     		movs	r0, #0
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE135:
  41              		.section	.text.CDC_Control_FS,"ax",%progbits
  42              		.align	1
  43              		.p2align 2,,3
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	CDC_Control_FS:
  50              	.LVL0:
  51              	.LFB136:
 173:Src/usbd_cdc_if.c **** 
 174:Src/usbd_cdc_if.c **** /**
 175:Src/usbd_cdc_if.c ****   * @brief  Manage the CDC class requests
 176:Src/usbd_cdc_if.c ****   * @param  cmd: Command code
 177:Src/usbd_cdc_if.c ****   * @param  pbuf: Buffer containing command data (request parameters)
 178:Src/usbd_cdc_if.c ****   * @param  length: Number of data to be sent (in bytes)
 179:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 180:Src/usbd_cdc_if.c ****   */
ARM GAS  /tmp/ccVb2qcF.s 			page 5


 181:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
 182:Src/usbd_cdc_if.c **** {
  52              		.loc 1 182 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
 183:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 5 */
 184:Src/usbd_cdc_if.c ****   switch(cmd)
  57              		.loc 1 184 3 view .LVU4
 185:Src/usbd_cdc_if.c ****   {
 186:Src/usbd_cdc_if.c ****     case CDC_SEND_ENCAPSULATED_COMMAND:
 187:Src/usbd_cdc_if.c **** 
 188:Src/usbd_cdc_if.c ****     break;
 189:Src/usbd_cdc_if.c **** 
 190:Src/usbd_cdc_if.c ****     case CDC_GET_ENCAPSULATED_RESPONSE:
 191:Src/usbd_cdc_if.c **** 
 192:Src/usbd_cdc_if.c ****     break;
 193:Src/usbd_cdc_if.c **** 
 194:Src/usbd_cdc_if.c ****     case CDC_SET_COMM_FEATURE:
 195:Src/usbd_cdc_if.c **** 
 196:Src/usbd_cdc_if.c ****     break;
 197:Src/usbd_cdc_if.c **** 
 198:Src/usbd_cdc_if.c ****     case CDC_GET_COMM_FEATURE:
 199:Src/usbd_cdc_if.c **** 
 200:Src/usbd_cdc_if.c ****     break;
 201:Src/usbd_cdc_if.c **** 
 202:Src/usbd_cdc_if.c ****     case CDC_CLEAR_COMM_FEATURE:
 203:Src/usbd_cdc_if.c **** 
 204:Src/usbd_cdc_if.c ****     break;
 205:Src/usbd_cdc_if.c **** 
 206:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 207:Src/usbd_cdc_if.c ****   /* Line Coding Structure                                                       */
 208:Src/usbd_cdc_if.c ****   /*-----------------------------------------------------------------------------*/
 209:Src/usbd_cdc_if.c ****   /* Offset | Field       | Size | Value  | Description                          */
 210:Src/usbd_cdc_if.c ****   /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
 211:Src/usbd_cdc_if.c ****   /* 4      | bCharFormat |   1  | Number | Stop bits                            */
 212:Src/usbd_cdc_if.c ****   /*                                        0 - 1 Stop bit                       */
 213:Src/usbd_cdc_if.c ****   /*                                        1 - 1.5 Stop bits                    */
 214:Src/usbd_cdc_if.c ****   /*                                        2 - 2 Stop bits                      */
 215:Src/usbd_cdc_if.c ****   /* 5      | bParityType |  1   | Number | Parity                               */
 216:Src/usbd_cdc_if.c ****   /*                                        0 - None                             */
 217:Src/usbd_cdc_if.c ****   /*                                        1 - Odd                              */
 218:Src/usbd_cdc_if.c ****   /*                                        2 - Even                             */
 219:Src/usbd_cdc_if.c ****   /*                                        3 - Mark                             */
 220:Src/usbd_cdc_if.c ****   /*                                        4 - Space                            */
 221:Src/usbd_cdc_if.c ****   /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
 222:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 223:Src/usbd_cdc_if.c ****     case CDC_SET_LINE_CODING:
 224:Src/usbd_cdc_if.c **** 
 225:Src/usbd_cdc_if.c ****     break;
 226:Src/usbd_cdc_if.c **** 
 227:Src/usbd_cdc_if.c ****     case CDC_GET_LINE_CODING:
 228:Src/usbd_cdc_if.c **** 
 229:Src/usbd_cdc_if.c ****     break;
 230:Src/usbd_cdc_if.c **** 
 231:Src/usbd_cdc_if.c ****     case CDC_SET_CONTROL_LINE_STATE:
ARM GAS  /tmp/ccVb2qcF.s 			page 6


 232:Src/usbd_cdc_if.c **** 
 233:Src/usbd_cdc_if.c ****     break;
 234:Src/usbd_cdc_if.c **** 
 235:Src/usbd_cdc_if.c ****     case CDC_SEND_BREAK:
 236:Src/usbd_cdc_if.c **** 
 237:Src/usbd_cdc_if.c ****     break;
 238:Src/usbd_cdc_if.c **** 
 239:Src/usbd_cdc_if.c ****   default:
 240:Src/usbd_cdc_if.c ****     break;
 241:Src/usbd_cdc_if.c ****   }
 242:Src/usbd_cdc_if.c **** 
 243:Src/usbd_cdc_if.c ****   return (USBD_OK);
  58              		.loc 1 243 3 view .LVU5
 244:Src/usbd_cdc_if.c ****   /* USER CODE END 5 */
 245:Src/usbd_cdc_if.c **** }
  59              		.loc 1 245 1 is_stmt 0 view .LVU6
  60 0000 0020     		movs	r0, #0
  61              	.LVL1:
  62              		.loc 1 245 1 view .LVU7
  63 0002 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE136:
  67              		.section	.text.CDC_TransmitCplt_FS,"ax",%progbits
  68              		.align	1
  69              		.p2align 2,,3
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	CDC_TransmitCplt_FS:
  76              	.LVL2:
  77              	.LFB139:
 246:Src/usbd_cdc_if.c **** 
 247:Src/usbd_cdc_if.c **** /**
 248:Src/usbd_cdc_if.c ****   * @brief  Data received over USB OUT endpoint are sent over CDC interface
 249:Src/usbd_cdc_if.c ****   *         through this function.
 250:Src/usbd_cdc_if.c ****   *
 251:Src/usbd_cdc_if.c ****   *         @note
 252:Src/usbd_cdc_if.c ****   *         This function will issue a NAK packet on any OUT packet received on
 253:Src/usbd_cdc_if.c ****   *         USB endpoint until exiting this function. If you exit this function
 254:Src/usbd_cdc_if.c ****   *         before transfer is complete on CDC interface (ie. using DMA controller)
 255:Src/usbd_cdc_if.c ****   *         it will result in receiving more data while previous ones are still
 256:Src/usbd_cdc_if.c ****   *         not sent.
 257:Src/usbd_cdc_if.c ****   *
 258:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 259:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 260:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 261:Src/usbd_cdc_if.c ****   */
 262:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
 263:Src/usbd_cdc_if.c **** {
 264:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 265:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 266:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 267:Src/usbd_cdc_if.c ****   return (USBD_OK);
 268:Src/usbd_cdc_if.c ****   /* USER CODE END 6 */
 269:Src/usbd_cdc_if.c **** }
 270:Src/usbd_cdc_if.c **** 
ARM GAS  /tmp/ccVb2qcF.s 			page 7


 271:Src/usbd_cdc_if.c **** /**
 272:Src/usbd_cdc_if.c ****   * @brief  CDC_Transmit_FS
 273:Src/usbd_cdc_if.c ****   *         Data to send over USB IN endpoint are sent over CDC interface
 274:Src/usbd_cdc_if.c ****   *         through this function.
 275:Src/usbd_cdc_if.c ****   *         @note
 276:Src/usbd_cdc_if.c ****   *
 277:Src/usbd_cdc_if.c ****   *
 278:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be sent
 279:Src/usbd_cdc_if.c ****   * @param  Len: Number of data to be sent (in bytes)
 280:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
 281:Src/usbd_cdc_if.c ****   */
 282:Src/usbd_cdc_if.c **** uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
 283:Src/usbd_cdc_if.c **** {
 284:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 285:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 7 */
 286:Src/usbd_cdc_if.c ****   USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 287:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 288:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 289:Src/usbd_cdc_if.c ****   }
 290:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 291:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 292:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 293:Src/usbd_cdc_if.c ****   return result;
 294:Src/usbd_cdc_if.c **** }
 295:Src/usbd_cdc_if.c **** 
 296:Src/usbd_cdc_if.c **** /**
 297:Src/usbd_cdc_if.c ****   * @brief  CDC_TransmitCplt_FS
 298:Src/usbd_cdc_if.c ****   *         Data transmited callback
 299:Src/usbd_cdc_if.c ****   *
 300:Src/usbd_cdc_if.c ****   *         @note
 301:Src/usbd_cdc_if.c ****   *         This function is IN transfer complete callback used to inform user that
 302:Src/usbd_cdc_if.c ****   *         the submitted Data is successfully sent over USB.
 303:Src/usbd_cdc_if.c ****   *
 304:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 305:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 306:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 307:Src/usbd_cdc_if.c ****   */
 308:Src/usbd_cdc_if.c **** static int8_t CDC_TransmitCplt_FS(uint8_t *Buf, uint32_t *Len, uint8_t epnum)
 309:Src/usbd_cdc_if.c **** {
  78              		.loc 1 309 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
 310:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
  83              		.loc 1 310 3 view .LVU9
 311:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 13 */
 312:Src/usbd_cdc_if.c ****   UNUSED(Buf);
  84              		.loc 1 312 3 view .LVU10
 313:Src/usbd_cdc_if.c ****   UNUSED(Len);
  85              		.loc 1 313 3 view .LVU11
 314:Src/usbd_cdc_if.c ****   UNUSED(epnum);
  86              		.loc 1 314 3 view .LVU12
 315:Src/usbd_cdc_if.c ****   /* USER CODE END 13 */
 316:Src/usbd_cdc_if.c ****   return result;
  87              		.loc 1 316 3 view .LVU13
 317:Src/usbd_cdc_if.c **** }
ARM GAS  /tmp/ccVb2qcF.s 			page 8


  88              		.loc 1 317 1 is_stmt 0 view .LVU14
  89 0000 0020     		movs	r0, #0
  90              	.LVL3:
  91              		.loc 1 317 1 view .LVU15
  92 0002 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE139:
  96              		.section	.text.CDC_Receive_FS,"ax",%progbits
  97              		.align	1
  98              		.p2align 2,,3
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu fpv4-sp-d16
 104              	CDC_Receive_FS:
 105              	.LVL4:
 106              	.LFB137:
 263:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 107              		.loc 1 263 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 265:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 111              		.loc 1 265 3 view .LVU17
 263:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 112              		.loc 1 263 1 is_stmt 0 view .LVU18
 113 0000 10B5     		push	{r4, lr}
 114              	.LCFI0:
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 4, -8
 117              		.cfi_offset 14, -4
 265:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 118              		.loc 1 265 3 view .LVU19
 119 0002 054C     		ldr	r4, .L7
 263:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 120              		.loc 1 263 1 view .LVU20
 121 0004 0146     		mov	r1, r0
 122              	.LVL5:
 265:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 123              		.loc 1 265 3 view .LVU21
 124 0006 2046     		mov	r0, r4
 125              	.LVL6:
 265:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 126              		.loc 1 265 3 view .LVU22
 127 0008 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 128              	.LVL7:
 266:Src/usbd_cdc_if.c ****   return (USBD_OK);
 129              		.loc 1 266 3 is_stmt 1 view .LVU23
 130 000c 2046     		mov	r0, r4
 131 000e FFF7FEFF 		bl	USBD_CDC_ReceivePacket
 132              	.LVL8:
 267:Src/usbd_cdc_if.c ****   /* USER CODE END 6 */
 133              		.loc 1 267 3 view .LVU24
 269:Src/usbd_cdc_if.c **** 
 134              		.loc 1 269 1 is_stmt 0 view .LVU25
 135 0012 0020     		movs	r0, #0
 136 0014 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccVb2qcF.s 			page 9


 137              	.L8:
 138 0016 00BF     		.align	2
 139              	.L7:
 140 0018 00000000 		.word	hUsbDeviceFS
 141              		.cfi_endproc
 142              	.LFE137:
 144              		.section	.text.CDC_Init_FS,"ax",%progbits
 145              		.align	1
 146              		.p2align 2,,3
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	CDC_Init_FS:
 153              	.LFB134:
 154:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 154              		.loc 1 154 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 157:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 158              		.loc 1 157 3 view .LVU27
 154:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 159              		.loc 1 154 1 is_stmt 0 view .LVU28
 160 0000 10B5     		push	{r4, lr}
 161              	.LCFI1:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 4, -8
 164              		.cfi_offset 14, -4
 157:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 165              		.loc 1 157 3 view .LVU29
 166 0002 064C     		ldr	r4, .L11
 167 0004 0649     		ldr	r1, .L11+4
 168 0006 0022     		movs	r2, #0
 169 0008 2046     		mov	r0, r4
 170 000a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 171              	.LVL9:
 158:Src/usbd_cdc_if.c ****   return (USBD_OK);
 172              		.loc 1 158 3 is_stmt 1 view .LVU30
 173 000e 0549     		ldr	r1, .L11+8
 174 0010 2046     		mov	r0, r4
 175 0012 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 176              	.LVL10:
 159:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */
 177              		.loc 1 159 3 view .LVU31
 161:Src/usbd_cdc_if.c **** 
 178              		.loc 1 161 1 is_stmt 0 view .LVU32
 179 0016 0020     		movs	r0, #0
 180 0018 10BD     		pop	{r4, pc}
 181              	.L12:
 182 001a 00BF     		.align	2
 183              	.L11:
 184 001c 00000000 		.word	hUsbDeviceFS
 185 0020 00000000 		.word	UserTxBufferFS
 186 0024 00000000 		.word	UserRxBufferFS
 187              		.cfi_endproc
 188              	.LFE134:
ARM GAS  /tmp/ccVb2qcF.s 			page 10


 190              		.section	.text.CDC_Transmit_FS,"ax",%progbits
 191              		.align	1
 192              		.p2align 2,,3
 193              		.global	CDC_Transmit_FS
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	CDC_Transmit_FS:
 200              	.LVL11:
 201              	.LFB138:
 283:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 202              		.loc 1 283 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 284:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 7 */
 206              		.loc 1 284 3 view .LVU34
 286:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 207              		.loc 1 286 3 view .LVU35
 283:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 208              		.loc 1 283 1 is_stmt 0 view .LVU36
 209 0000 10B5     		push	{r4, lr}
 210              	.LCFI2:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 4, -8
 213              		.cfi_offset 14, -4
 286:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 214              		.loc 1 286 27 view .LVU37
 215 0002 094C     		ldr	r4, .L17
 216 0004 D4F8BC32 		ldr	r3, [r4, #700]
 217              	.LVL12:
 287:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 218              		.loc 1 287 3 is_stmt 1 view .LVU38
 287:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 219              		.loc 1 287 11 is_stmt 0 view .LVU39
 220 0008 D3F81432 		ldr	r3, [r3, #532]
 221              	.LVL13:
 287:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 222              		.loc 1 287 6 view .LVU40
 223 000c 0BB1     		cbz	r3, .L16
 294:Src/usbd_cdc_if.c **** 
 224              		.loc 1 294 1 view .LVU41
 225 000e 0120     		movs	r0, #1
 226              	.LVL14:
 294:Src/usbd_cdc_if.c **** 
 227              		.loc 1 294 1 view .LVU42
 228 0010 10BD     		pop	{r4, pc}
 229              	.LVL15:
 230              	.L16:
 290:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 231              		.loc 1 290 3 is_stmt 1 view .LVU43
 232 0012 0A46     		mov	r2, r1
 233 0014 0146     		mov	r1, r0
 234              	.LVL16:
 290:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 235              		.loc 1 290 3 is_stmt 0 view .LVU44
ARM GAS  /tmp/ccVb2qcF.s 			page 11


 236 0016 2046     		mov	r0, r4
 237              	.LVL17:
 290:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 238              		.loc 1 290 3 view .LVU45
 239 0018 FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 240              	.LVL18:
 291:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 241              		.loc 1 291 3 is_stmt 1 view .LVU46
 291:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 242              		.loc 1 291 12 is_stmt 0 view .LVU47
 243 001c 2046     		mov	r0, r4
 294:Src/usbd_cdc_if.c **** 
 244              		.loc 1 294 1 view .LVU48
 245 001e BDE81040 		pop	{r4, lr}
 246              	.LCFI3:
 247              		.cfi_restore 14
 248              		.cfi_restore 4
 249              		.cfi_def_cfa_offset 0
 291:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 250              		.loc 1 291 12 view .LVU49
 251 0022 FFF7FEBF 		b	USBD_CDC_TransmitPacket
 252              	.LVL19:
 253              	.L18:
 254 0026 00BF     		.align	2
 255              	.L17:
 256 0028 00000000 		.word	hUsbDeviceFS
 257              		.cfi_endproc
 258              	.LFE138:
 260              		.global	USBD_Interface_fops_FS
 261              		.comm	UserTxBufferFS,2048,4
 262              		.comm	UserRxBufferFS,2048,4
 263              		.section	.data.USBD_Interface_fops_FS,"aw"
 264              		.align	2
 267              	USBD_Interface_fops_FS:
 268 0000 00000000 		.word	CDC_Init_FS
 269 0004 00000000 		.word	CDC_DeInit_FS
 270 0008 00000000 		.word	CDC_Control_FS
 271 000c 00000000 		.word	CDC_Receive_FS
 272 0010 00000000 		.word	CDC_TransmitCplt_FS
 273              		.text
 274              	.Letext0:
 275              		.file 2 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
 276              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h"
 277              		.file 4 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_types.h"
 278              		.file 5 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/reent.h"
 279              		.file 6 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/lock.h"
 280              		.file 7 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 281              		.file 8 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/stdlib.h"
 282              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 283              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 284              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 285              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 286              		.file 13 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 287              		.file 14 "Inc/usbd_cdc_if.h"
ARM GAS  /tmp/ccVb2qcF.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_cdc_if.c
     /tmp/ccVb2qcF.s:18     .text.CDC_DeInit_FS:0000000000000000 $t
     /tmp/ccVb2qcF.s:26     .text.CDC_DeInit_FS:0000000000000000 CDC_DeInit_FS
     /tmp/ccVb2qcF.s:42     .text.CDC_Control_FS:0000000000000000 $t
     /tmp/ccVb2qcF.s:49     .text.CDC_Control_FS:0000000000000000 CDC_Control_FS
     /tmp/ccVb2qcF.s:68     .text.CDC_TransmitCplt_FS:0000000000000000 $t
     /tmp/ccVb2qcF.s:75     .text.CDC_TransmitCplt_FS:0000000000000000 CDC_TransmitCplt_FS
     /tmp/ccVb2qcF.s:97     .text.CDC_Receive_FS:0000000000000000 $t
     /tmp/ccVb2qcF.s:104    .text.CDC_Receive_FS:0000000000000000 CDC_Receive_FS
     /tmp/ccVb2qcF.s:140    .text.CDC_Receive_FS:0000000000000018 $d
     /tmp/ccVb2qcF.s:145    .text.CDC_Init_FS:0000000000000000 $t
     /tmp/ccVb2qcF.s:152    .text.CDC_Init_FS:0000000000000000 CDC_Init_FS
     /tmp/ccVb2qcF.s:184    .text.CDC_Init_FS:000000000000001c $d
                            *COM*:0000000000000800 UserTxBufferFS
                            *COM*:0000000000000800 UserRxBufferFS
     /tmp/ccVb2qcF.s:191    .text.CDC_Transmit_FS:0000000000000000 $t
     /tmp/ccVb2qcF.s:199    .text.CDC_Transmit_FS:0000000000000000 CDC_Transmit_FS
     /tmp/ccVb2qcF.s:256    .text.CDC_Transmit_FS:0000000000000028 $d
     /tmp/ccVb2qcF.s:267    .data.USBD_Interface_fops_FS:0000000000000000 USBD_Interface_fops_FS
     /tmp/ccVb2qcF.s:264    .data.USBD_Interface_fops_FS:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_CDC_SetRxBuffer
USBD_CDC_ReceivePacket
hUsbDeviceFS
USBD_CDC_SetTxBuffer
USBD_CDC_TransmitPacket

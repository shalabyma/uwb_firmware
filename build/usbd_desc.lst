ARM GAS  /tmp/ccnZ1omw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_desc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	USBD_FS_DeviceDescriptor
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	USBD_FS_DeviceDescriptor:
  28              	.LVL0:
  29              	.LFB134:
  30              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_desc.c **** /**
   3:Src/usbd_desc.c ****   ******************************************************************************
   4:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   5:Src/usbd_desc.c ****   * @version        : v1.0_Cube
   6:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   7:Src/usbd_desc.c ****   ******************************************************************************
   8:Src/usbd_desc.c ****   * @attention
   9:Src/usbd_desc.c ****   *
  10:Src/usbd_desc.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  11:Src/usbd_desc.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_desc.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_desc.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_desc.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_desc.c ****   *
  18:Src/usbd_desc.c ****   ******************************************************************************
  19:Src/usbd_desc.c ****   */
  20:Src/usbd_desc.c **** /* USER CODE END Header */
  21:Src/usbd_desc.c **** 
  22:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_desc.c **** #include "usbd_core.h"
  24:Src/usbd_desc.c **** #include "usbd_desc.h"
  25:Src/usbd_desc.c **** #include "usbd_conf.h"
  26:Src/usbd_desc.c **** 
  27:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  28:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccnZ1omw.s 			page 2


  29:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
  30:Src/usbd_desc.c **** 
  31:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
  32:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  33:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  34:Src/usbd_desc.c **** 
  35:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  36:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  37:Src/usbd_desc.c **** 
  38:Src/usbd_desc.c **** /* USER CODE END PV */
  39:Src/usbd_desc.c **** 
  40:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  41:Src/usbd_desc.c ****   * @{
  42:Src/usbd_desc.c ****   */
  43:Src/usbd_desc.c **** 
  44:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  45:Src/usbd_desc.c ****   * @{
  46:Src/usbd_desc.c ****   */
  47:Src/usbd_desc.c **** 
  48:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  49:Src/usbd_desc.c ****   * @brief Private types.
  50:Src/usbd_desc.c ****   * @{
  51:Src/usbd_desc.c ****   */
  52:Src/usbd_desc.c **** 
  53:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /**
  58:Src/usbd_desc.c ****   * @}
  59:Src/usbd_desc.c ****   */
  60:Src/usbd_desc.c **** 
  61:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  62:Src/usbd_desc.c ****   * @brief Private defines.
  63:Src/usbd_desc.c ****   * @{
  64:Src/usbd_desc.c ****   */
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** #define USBD_VID     1155
  67:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  68:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  69:Src/usbd_desc.c **** #define USBD_PID_FS     22336
  70:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Virtual ComPort"
  71:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "CDC Config"
  72:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "CDC Interface"
  73:Src/usbd_desc.c **** 
  74:Src/usbd_desc.c **** #define USB_SIZ_BOS_DESC            0x0C
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  77:Src/usbd_desc.c **** 
  78:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
  79:Src/usbd_desc.c **** 
  80:Src/usbd_desc.c **** /**
  81:Src/usbd_desc.c ****   * @}
  82:Src/usbd_desc.c ****   */
  83:Src/usbd_desc.c **** 
  84:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  85:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccnZ1omw.s 			page 3


  86:Src/usbd_desc.c **** /* USER CODE END 0 */
  87:Src/usbd_desc.c **** 
  88:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
  89:Src/usbd_desc.c ****   * @brief Private macros.
  90:Src/usbd_desc.c ****   * @{
  91:Src/usbd_desc.c ****   */
  92:Src/usbd_desc.c **** 
  93:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  94:Src/usbd_desc.c **** 
  95:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
  96:Src/usbd_desc.c **** 
  97:Src/usbd_desc.c **** /**
  98:Src/usbd_desc.c ****   * @}
  99:Src/usbd_desc.c ****   */
 100:Src/usbd_desc.c **** 
 101:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 102:Src/usbd_desc.c ****   * @brief Private functions declaration.
 103:Src/usbd_desc.c ****   * @{
 104:Src/usbd_desc.c ****   */
 105:Src/usbd_desc.c **** 
 106:Src/usbd_desc.c **** static void Get_SerialNum(void);
 107:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len);
 108:Src/usbd_desc.c **** 
 109:Src/usbd_desc.c **** /**
 110:Src/usbd_desc.c ****   * @}
 111:Src/usbd_desc.c ****   */
 112:Src/usbd_desc.c **** 
 113:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 114:Src/usbd_desc.c ****   * @brief Private functions declaration for FS.
 115:Src/usbd_desc.c ****   * @{
 116:Src/usbd_desc.c ****   */
 117:Src/usbd_desc.c **** 
 118:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 119:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 120:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 121:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 122:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 123:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 124:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 125:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 126:Src/usbd_desc.c **** uint8_t * USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 127:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 128:Src/usbd_desc.c **** 
 129:Src/usbd_desc.c **** /**
 130:Src/usbd_desc.c ****   * @}
 131:Src/usbd_desc.c ****   */
 132:Src/usbd_desc.c **** 
 133:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 134:Src/usbd_desc.c ****   * @brief Private variables.
 135:Src/usbd_desc.c ****   * @{
 136:Src/usbd_desc.c ****   */
 137:Src/usbd_desc.c **** 
 138:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 139:Src/usbd_desc.c **** {
 140:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor
 141:Src/usbd_desc.c **** , USBD_FS_LangIDStrDescriptor
 142:Src/usbd_desc.c **** , USBD_FS_ManufacturerStrDescriptor
ARM GAS  /tmp/ccnZ1omw.s 			page 4


 143:Src/usbd_desc.c **** , USBD_FS_ProductStrDescriptor
 144:Src/usbd_desc.c **** , USBD_FS_SerialStrDescriptor
 145:Src/usbd_desc.c **** , USBD_FS_ConfigStrDescriptor
 146:Src/usbd_desc.c **** , USBD_FS_InterfaceStrDescriptor
 147:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 148:Src/usbd_desc.c **** , USBD_FS_USR_BOSDescriptor
 149:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 150:Src/usbd_desc.c **** };
 151:Src/usbd_desc.c **** 
 152:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 153:Src/usbd_desc.c ****   #pragma data_alignment=4
 154:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 155:Src/usbd_desc.c **** /** USB standard device descriptor. */
 156:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 157:Src/usbd_desc.c **** {
 158:Src/usbd_desc.c ****   0x12,                       /*bLength */
 159:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 160:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 161:Src/usbd_desc.c ****   0x01,                       /*bcdUSB */ /* changed to USB version 2.01
 162:Src/usbd_desc.c ****                                              in order to support LPM L1 suspend
 163:Src/usbd_desc.c ****                                              resume test of USBCV3.0*/
 164:Src/usbd_desc.c **** #else
 165:Src/usbd_desc.c ****   0x00,                       /*bcdUSB */
 166:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 167:Src/usbd_desc.c ****   0x02,
 168:Src/usbd_desc.c ****   0x02,                       /*bDeviceClass*/
 169:Src/usbd_desc.c ****   0x02,                       /*bDeviceSubClass*/
 170:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 171:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 172:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 173:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 174:Src/usbd_desc.c ****   LOBYTE(USBD_PID_FS),        /*idProduct*/
 175:Src/usbd_desc.c ****   HIBYTE(USBD_PID_FS),        /*idProduct*/
 176:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 177:Src/usbd_desc.c ****   0x02,
 178:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 179:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 180:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 181:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 182:Src/usbd_desc.c **** };
 183:Src/usbd_desc.c **** 
 184:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 185:Src/usbd_desc.c **** /** BOS descriptor. */
 186:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 187:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 188:Src/usbd_desc.c ****   #pragma data_alignment=4
 189:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 190:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_BOSDesc[USB_SIZ_BOS_DESC] __ALIGN_END =
 191:Src/usbd_desc.c **** {
 192:Src/usbd_desc.c ****   0x5,
 193:Src/usbd_desc.c ****   USB_DESC_TYPE_BOS,
 194:Src/usbd_desc.c ****   0xC,
 195:Src/usbd_desc.c ****   0x0,
 196:Src/usbd_desc.c ****   0x1,  /* 1 device capability*/
 197:Src/usbd_desc.c ****         /* device capability*/
 198:Src/usbd_desc.c ****   0x7,
 199:Src/usbd_desc.c ****   USB_DEVICE_CAPABITY_TYPE,
ARM GAS  /tmp/ccnZ1omw.s 			page 5


 200:Src/usbd_desc.c ****   0x2,
 201:Src/usbd_desc.c ****   0x2,  /* LPM capability bit set*/
 202:Src/usbd_desc.c ****   0x0,
 203:Src/usbd_desc.c ****   0x0,
 204:Src/usbd_desc.c ****   0x0
 205:Src/usbd_desc.c **** };
 206:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 207:Src/usbd_desc.c **** 
 208:Src/usbd_desc.c **** /**
 209:Src/usbd_desc.c ****   * @}
 210:Src/usbd_desc.c ****   */
 211:Src/usbd_desc.c **** 
 212:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 213:Src/usbd_desc.c ****   * @brief Private variables.
 214:Src/usbd_desc.c ****   * @{
 215:Src/usbd_desc.c ****   */
 216:Src/usbd_desc.c **** 
 217:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 218:Src/usbd_desc.c ****   #pragma data_alignment=4
 219:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 220:Src/usbd_desc.c **** 
 221:Src/usbd_desc.c **** /** USB lang indentifier descriptor. */
 222:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 223:Src/usbd_desc.c **** {
 224:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 225:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 226:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 227:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 228:Src/usbd_desc.c **** };
 229:Src/usbd_desc.c **** 
 230:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 231:Src/usbd_desc.c ****   #pragma data_alignment=4
 232:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 233:Src/usbd_desc.c **** /* Internal string descriptor. */
 234:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 235:Src/usbd_desc.c **** 
 236:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 237:Src/usbd_desc.c ****   #pragma data_alignment=4
 238:Src/usbd_desc.c **** #endif
 239:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] __ALIGN_END = {
 240:Src/usbd_desc.c ****   USB_SIZ_STRING_SERIAL,
 241:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 242:Src/usbd_desc.c **** };
 243:Src/usbd_desc.c **** 
 244:Src/usbd_desc.c **** /**
 245:Src/usbd_desc.c ****   * @}
 246:Src/usbd_desc.c ****   */
 247:Src/usbd_desc.c **** 
 248:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 249:Src/usbd_desc.c ****   * @brief Private functions.
 250:Src/usbd_desc.c ****   * @{
 251:Src/usbd_desc.c ****   */
 252:Src/usbd_desc.c **** 
 253:Src/usbd_desc.c **** /**
 254:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 255:Src/usbd_desc.c ****   * @param  speed : Current device speed
 256:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
ARM GAS  /tmp/ccnZ1omw.s 			page 6


 257:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 258:Src/usbd_desc.c ****   */
 259:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 260:Src/usbd_desc.c **** {
  31              		.loc 1 260 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
 261:Src/usbd_desc.c ****   UNUSED(speed);
  36              		.loc 1 261 3 view .LVU1
 262:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  37              		.loc 1 262 3 view .LVU2
  38              		.loc 1 262 11 is_stmt 0 view .LVU3
  39 0000 1223     		movs	r3, #18
 263:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
 264:Src/usbd_desc.c **** }
  40              		.loc 1 264 1 view .LVU4
  41 0002 0148     		ldr	r0, .L3
  42              	.LVL1:
 262:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  43              		.loc 1 262 11 view .LVU5
  44 0004 0B80     		strh	r3, [r1]	@ movhi
 263:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
  45              		.loc 1 263 3 is_stmt 1 view .LVU6
  46              		.loc 1 264 1 is_stmt 0 view .LVU7
  47 0006 7047     		bx	lr
  48              	.L4:
  49              		.align	2
  50              	.L3:
  51 0008 00000000 		.word	.LANCHOR0
  52              		.cfi_endproc
  53              	.LFE134:
  55              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  56              		.align	1
  57              		.p2align 2,,3
  58              		.global	USBD_FS_LangIDStrDescriptor
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv4-sp-d16
  64              	USBD_FS_LangIDStrDescriptor:
  65              	.LVL2:
  66              	.LFB135:
 265:Src/usbd_desc.c **** 
 266:Src/usbd_desc.c **** /**
 267:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 268:Src/usbd_desc.c ****   * @param  speed : Current device speed
 269:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 270:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 271:Src/usbd_desc.c ****   */
 272:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 273:Src/usbd_desc.c **** {
  67              		.loc 1 273 1 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccnZ1omw.s 			page 7


  71              		@ link register save eliminated.
 274:Src/usbd_desc.c ****   UNUSED(speed);
  72              		.loc 1 274 3 view .LVU9
 275:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  73              		.loc 1 275 3 view .LVU10
  74              		.loc 1 275 11 is_stmt 0 view .LVU11
  75 0000 0423     		movs	r3, #4
 276:Src/usbd_desc.c ****   return USBD_LangIDDesc;
 277:Src/usbd_desc.c **** }
  76              		.loc 1 277 1 view .LVU12
  77 0002 0148     		ldr	r0, .L6
  78              	.LVL3:
 275:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  79              		.loc 1 275 11 view .LVU13
  80 0004 0B80     		strh	r3, [r1]	@ movhi
 276:Src/usbd_desc.c ****   return USBD_LangIDDesc;
  81              		.loc 1 276 3 is_stmt 1 view .LVU14
  82              		.loc 1 277 1 is_stmt 0 view .LVU15
  83 0006 7047     		bx	lr
  84              	.L7:
  85              		.align	2
  86              	.L6:
  87 0008 00000000 		.word	.LANCHOR1
  88              		.cfi_endproc
  89              	.LFE135:
  91              		.section	.text.IntToUnicode,"ax",%progbits
  92              		.align	1
  93              		.p2align 2,,3
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	IntToUnicode:
 100              	.LVL4:
 101              	.LFB142:
 278:Src/usbd_desc.c **** 
 279:Src/usbd_desc.c **** /**
 280:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 281:Src/usbd_desc.c ****   * @param  speed : Current device speed
 282:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 283:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 284:Src/usbd_desc.c ****   */
 285:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 286:Src/usbd_desc.c **** {
 287:Src/usbd_desc.c ****   if(speed == 0)
 288:Src/usbd_desc.c ****   {
 289:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 290:Src/usbd_desc.c ****   }
 291:Src/usbd_desc.c ****   else
 292:Src/usbd_desc.c ****   {
 293:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 294:Src/usbd_desc.c ****   }
 295:Src/usbd_desc.c ****   return USBD_StrDesc;
 296:Src/usbd_desc.c **** }
 297:Src/usbd_desc.c **** 
 298:Src/usbd_desc.c **** /**
 299:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
ARM GAS  /tmp/ccnZ1omw.s 			page 8


 300:Src/usbd_desc.c ****   * @param  speed : Current device speed
 301:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 302:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 303:Src/usbd_desc.c ****   */
 304:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 305:Src/usbd_desc.c **** {
 306:Src/usbd_desc.c ****   UNUSED(speed);
 307:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 308:Src/usbd_desc.c ****   return USBD_StrDesc;
 309:Src/usbd_desc.c **** }
 310:Src/usbd_desc.c **** 
 311:Src/usbd_desc.c **** /**
 312:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 313:Src/usbd_desc.c ****   * @param  speed : Current device speed
 314:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 315:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 316:Src/usbd_desc.c ****   */
 317:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 318:Src/usbd_desc.c **** {
 319:Src/usbd_desc.c ****   UNUSED(speed);
 320:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 321:Src/usbd_desc.c **** 
 322:Src/usbd_desc.c ****   /* Update the serial number string descriptor with the data from the unique
 323:Src/usbd_desc.c ****    * ID */
 324:Src/usbd_desc.c ****   Get_SerialNum();
 325:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */
 326:Src/usbd_desc.c **** 
 327:Src/usbd_desc.c ****   /* USER CODE END USBD_FS_SerialStrDescriptor */
 328:Src/usbd_desc.c ****   return (uint8_t *) USBD_StringSerial;
 329:Src/usbd_desc.c **** }
 330:Src/usbd_desc.c **** 
 331:Src/usbd_desc.c **** /**
 332:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 333:Src/usbd_desc.c ****   * @param  speed : Current device speed
 334:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 335:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 336:Src/usbd_desc.c ****   */
 337:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 338:Src/usbd_desc.c **** {
 339:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 340:Src/usbd_desc.c ****   {
 341:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 342:Src/usbd_desc.c ****   }
 343:Src/usbd_desc.c ****   else
 344:Src/usbd_desc.c ****   {
 345:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 346:Src/usbd_desc.c ****   }
 347:Src/usbd_desc.c ****   return USBD_StrDesc;
 348:Src/usbd_desc.c **** }
 349:Src/usbd_desc.c **** 
 350:Src/usbd_desc.c **** /**
 351:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 352:Src/usbd_desc.c ****   * @param  speed : Current device speed
 353:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 354:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 355:Src/usbd_desc.c ****   */
 356:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
ARM GAS  /tmp/ccnZ1omw.s 			page 9


 357:Src/usbd_desc.c **** {
 358:Src/usbd_desc.c ****   if(speed == 0)
 359:Src/usbd_desc.c ****   {
 360:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 361:Src/usbd_desc.c ****   }
 362:Src/usbd_desc.c ****   else
 363:Src/usbd_desc.c ****   {
 364:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 365:Src/usbd_desc.c ****   }
 366:Src/usbd_desc.c ****   return USBD_StrDesc;
 367:Src/usbd_desc.c **** }
 368:Src/usbd_desc.c **** 
 369:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 370:Src/usbd_desc.c **** /**
 371:Src/usbd_desc.c ****   * @brief  Return the BOS descriptor
 372:Src/usbd_desc.c ****   * @param  speed : Current device speed
 373:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 374:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 375:Src/usbd_desc.c ****   */
 376:Src/usbd_desc.c **** uint8_t * USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 377:Src/usbd_desc.c **** {
 378:Src/usbd_desc.c ****   UNUSED(speed);
 379:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_BOSDesc);
 380:Src/usbd_desc.c ****   return (uint8_t*)USBD_FS_BOSDesc;
 381:Src/usbd_desc.c **** }
 382:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 383:Src/usbd_desc.c **** 
 384:Src/usbd_desc.c **** /**
 385:Src/usbd_desc.c ****   * @brief  Create the serial number string descriptor
 386:Src/usbd_desc.c ****   * @param  None
 387:Src/usbd_desc.c ****   * @retval None
 388:Src/usbd_desc.c ****   */
 389:Src/usbd_desc.c **** static void Get_SerialNum(void)
 390:Src/usbd_desc.c **** {
 391:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 392:Src/usbd_desc.c **** 
 393:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t *) DEVICE_ID1;
 394:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 395:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 396:Src/usbd_desc.c **** 
 397:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 398:Src/usbd_desc.c **** 
 399:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 400:Src/usbd_desc.c ****   {
 401:Src/usbd_desc.c ****     IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 402:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 403:Src/usbd_desc.c ****   }
 404:Src/usbd_desc.c **** }
 405:Src/usbd_desc.c **** 
 406:Src/usbd_desc.c **** /**
 407:Src/usbd_desc.c ****   * @brief  Convert Hex 32Bits value into char
 408:Src/usbd_desc.c ****   * @param  value: value to convert
 409:Src/usbd_desc.c ****   * @param  pbuf: pointer to the buffer
 410:Src/usbd_desc.c ****   * @param  len: buffer length
 411:Src/usbd_desc.c ****   * @retval None
 412:Src/usbd_desc.c ****   */
 413:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
ARM GAS  /tmp/ccnZ1omw.s 			page 10


 414:Src/usbd_desc.c **** {
 102              		.loc 1 414 1 is_stmt 1 view -0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 415:Src/usbd_desc.c ****   uint8_t idx = 0;
 107              		.loc 1 415 3 view .LVU17
 416:Src/usbd_desc.c **** 
 417:Src/usbd_desc.c ****   for (idx = 0; idx < len; idx++)
 108              		.loc 1 417 3 view .LVU18
 414:Src/usbd_desc.c ****   uint8_t idx = 0;
 109              		.loc 1 414 1 is_stmt 0 view .LVU19
 110 0000 0023     		movs	r3, #0
 111              		.loc 1 417 17 is_stmt 1 view .LVU20
 414:Src/usbd_desc.c ****   uint8_t idx = 0;
 112              		.loc 1 414 1 is_stmt 0 view .LVU21
 113 0002 F0B4     		push	{r4, r5, r6, r7}
 114              	.LCFI0:
 115              		.cfi_def_cfa_offset 16
 116              		.cfi_offset 4, -16
 117              		.cfi_offset 5, -12
 118              		.cfi_offset 6, -8
 119              		.cfi_offset 7, -4
 120 0004 5200     		lsls	r2, r2, #1
 121              	.LVL5:
 414:Src/usbd_desc.c ****   uint8_t idx = 0;
 122              		.loc 1 414 1 view .LVU22
 123 0006 4F1C     		adds	r7, r1, #1
 418:Src/usbd_desc.c ****   {
 419:Src/usbd_desc.c ****     if (((value >> 28)) < 0xA)
 420:Src/usbd_desc.c ****     {
 421:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + '0';
 422:Src/usbd_desc.c ****     }
 423:Src/usbd_desc.c ****     else
 424:Src/usbd_desc.c ****     {
 425:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 426:Src/usbd_desc.c ****     }
 427:Src/usbd_desc.c **** 
 428:Src/usbd_desc.c ****     value = value << 4;
 429:Src/usbd_desc.c **** 
 430:Src/usbd_desc.c ****     pbuf[2 * idx + 1] = 0;
 124              		.loc 1 430 23 view .LVU23
 125 0008 1E46     		mov	r6, r3
 126              	.LVL6:
 127              	.L11:
 419:Src/usbd_desc.c ****     {
 128              		.loc 1 419 5 is_stmt 1 view .LVU24
 421:Src/usbd_desc.c ****     }
 129              		.loc 1 421 7 view .LVU25
 425:Src/usbd_desc.c ****     }
 130              		.loc 1 425 7 view .LVU26
 419:Src/usbd_desc.c ****     {
 131              		.loc 1 419 8 is_stmt 0 view .LVU27
 132 000a B0F1204F 		cmp	r0, #-1610612736
 419:Src/usbd_desc.c ****     {
 133              		.loc 1 419 17 view .LVU28
ARM GAS  /tmp/ccnZ1omw.s 			page 11


 134 000e 4FEA1074 		lsr	r4, r0, #28
 421:Src/usbd_desc.c ****     }
 135              		.loc 1 421 37 view .LVU29
 136 0012 04F13005 		add	r5, r4, #48
 425:Src/usbd_desc.c ****     }
 137              		.loc 1 425 43 view .LVU30
 138 0016 2ABF     		itet	cs
 139 0018 3734     		addcs	r4, r4, #55
 421:Src/usbd_desc.c ****     }
 140              		.loc 1 421 21 view .LVU31
 141 001a CD54     		strbcc	r5, [r1, r3]
 425:Src/usbd_desc.c ****     }
 142              		.loc 1 425 21 view .LVU32
 143 001c CC54     		strbcs	r4, [r1, r3]
 428:Src/usbd_desc.c **** 
 144              		.loc 1 428 5 is_stmt 1 view .LVU33
 145              		.loc 1 430 23 is_stmt 0 view .LVU34
 146 001e FE54     		strb	r6, [r7, r3]
 147 0020 0233     		adds	r3, r3, #2
 417:Src/usbd_desc.c ****   {
 148              		.loc 1 417 3 view .LVU35
 149 0022 9A42     		cmp	r2, r3
 428:Src/usbd_desc.c **** 
 150              		.loc 1 428 11 view .LVU36
 151 0024 4FEA0010 		lsl	r0, r0, #4
 152              	.LVL7:
 153              		.loc 1 430 5 is_stmt 1 view .LVU37
 417:Src/usbd_desc.c ****   {
 154              		.loc 1 417 28 view .LVU38
 417:Src/usbd_desc.c ****   {
 155              		.loc 1 417 17 view .LVU39
 417:Src/usbd_desc.c ****   {
 156              		.loc 1 417 3 is_stmt 0 view .LVU40
 157 0028 EFD1     		bne	.L11
 431:Src/usbd_desc.c ****   }
 432:Src/usbd_desc.c **** }
 158              		.loc 1 432 1 view .LVU41
 159 002a F0BC     		pop	{r4, r5, r6, r7}
 160              	.LCFI1:
 161              		.cfi_restore 7
 162              		.cfi_restore 6
 163              		.cfi_restore 5
 164              		.cfi_restore 4
 165              		.cfi_def_cfa_offset 0
 166 002c 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE142:
 170 002e 00BF     		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 171              		.align	1
 172              		.p2align 2,,3
 173              		.global	USBD_FS_SerialStrDescriptor
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv4-sp-d16
 179              	USBD_FS_SerialStrDescriptor:
 180              	.LVL8:
ARM GAS  /tmp/ccnZ1omw.s 			page 12


 181              	.LFB138:
 318:Src/usbd_desc.c ****   UNUSED(speed);
 182              		.loc 1 318 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 319:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 186              		.loc 1 319 3 view .LVU43
 320:Src/usbd_desc.c **** 
 187              		.loc 1 320 3 view .LVU44
 188              	.LBB4:
 189              	.LBB5:
 393:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 190              		.loc 1 393 17 is_stmt 0 view .LVU45
 191 0000 0B4A     		ldr	r2, .L24
 395:Src/usbd_desc.c **** 
 192              		.loc 1 395 17 view .LVU46
 193 0002 0C4B     		ldr	r3, .L24+4
 393:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 194              		.loc 1 393 17 view .LVU47
 195 0004 1068     		ldr	r0, [r2]
 196              	.LVL9:
 397:Src/usbd_desc.c **** 
 197              		.loc 1 397 17 view .LVU48
 198 0006 1B68     		ldr	r3, [r3]
 199              	.LBE5:
 200              	.LBE4:
 320:Src/usbd_desc.c **** 
 201              		.loc 1 320 11 view .LVU49
 202 0008 1A22     		movs	r2, #26
 203              	.LBB9:
 204              	.LBB6:
 399:Src/usbd_desc.c ****   {
 205              		.loc 1 399 6 view .LVU50
 206 000a C018     		adds	r0, r0, r3
 207              	.LBE6:
 208              	.LBE9:
 320:Src/usbd_desc.c **** 
 209              		.loc 1 320 11 view .LVU51
 210 000c 0A80     		strh	r2, [r1]	@ movhi
 324:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */
 211              		.loc 1 324 3 is_stmt 1 view .LVU52
 212              	.LBB10:
 213              	.LBI4:
 389:Src/usbd_desc.c **** {
 214              		.loc 1 389 13 view .LVU53
 215              	.LBB7:
 391:Src/usbd_desc.c **** 
 216              		.loc 1 391 3 view .LVU54
 393:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 217              		.loc 1 393 3 view .LVU55
 394:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 218              		.loc 1 394 3 view .LVU56
 219              	.LVL10:
 395:Src/usbd_desc.c **** 
 220              		.loc 1 395 3 view .LVU57
 397:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccnZ1omw.s 			page 13


 221              		.loc 1 397 3 view .LVU58
 399:Src/usbd_desc.c ****   {
 222              		.loc 1 399 3 view .LVU59
 399:Src/usbd_desc.c ****   {
 223              		.loc 1 399 6 is_stmt 0 view .LVU60
 224 000e 01D1     		bne	.L23
 225              	.LVL11:
 399:Src/usbd_desc.c ****   {
 226              		.loc 1 399 6 view .LVU61
 227              	.LBE7:
 228              	.LBE10:
 328:Src/usbd_desc.c **** }
 229              		.loc 1 328 3 is_stmt 1 view .LVU62
 329:Src/usbd_desc.c **** 
 230              		.loc 1 329 1 is_stmt 0 view .LVU63
 231 0010 0948     		ldr	r0, .L24+8
 232 0012 7047     		bx	lr
 233              	.LVL12:
 234              	.L23:
 318:Src/usbd_desc.c ****   UNUSED(speed);
 235              		.loc 1 318 1 view .LVU64
 236 0014 10B5     		push	{r4, lr}
 237              	.LCFI2:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 4, -8
 240              		.cfi_offset 14, -4
 241              	.LBB11:
 242              	.LBB8:
 394:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 243              		.loc 1 394 17 view .LVU65
 244 0016 094B     		ldr	r3, .L24+12
 245              	.LVL13:
 401:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 246              		.loc 1 401 5 view .LVU66
 247 0018 0949     		ldr	r1, .L24+16
 248              	.LVL14:
 394:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 249              		.loc 1 394 17 view .LVU67
 250 001a 1C68     		ldr	r4, [r3]
 401:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 251              		.loc 1 401 5 is_stmt 1 view .LVU68
 252 001c 0822     		movs	r2, #8
 253 001e FFF7FEFF 		bl	IntToUnicode
 254              	.LVL15:
 402:Src/usbd_desc.c ****   }
 255              		.loc 1 402 5 view .LVU69
 256 0022 2046     		mov	r0, r4
 257 0024 0749     		ldr	r1, .L24+20
 258 0026 0422     		movs	r2, #4
 259 0028 FFF7FEFF 		bl	IntToUnicode
 260              	.LVL16:
 402:Src/usbd_desc.c ****   }
 261              		.loc 1 402 5 is_stmt 0 view .LVU70
 262              	.LBE8:
 263              	.LBE11:
 328:Src/usbd_desc.c **** }
 264              		.loc 1 328 3 is_stmt 1 view .LVU71
ARM GAS  /tmp/ccnZ1omw.s 			page 14


 329:Src/usbd_desc.c **** 
 265              		.loc 1 329 1 is_stmt 0 view .LVU72
 266 002c 0248     		ldr	r0, .L24+8
 267 002e 10BD     		pop	{r4, pc}
 268              	.L25:
 269              		.align	2
 270              	.L24:
 271 0030 107AFF1F 		.word	536836624
 272 0034 187AFF1F 		.word	536836632
 273 0038 00000000 		.word	.LANCHOR2
 274 003c 147AFF1F 		.word	536836628
 275 0040 02000000 		.word	.LANCHOR2+2
 276 0044 12000000 		.word	.LANCHOR2+18
 277              		.cfi_endproc
 278              	.LFE138:
 280              		.section	.rodata.USBD_FS_ManufacturerStrDescriptor.str1.4,"aMS",%progbits,1
 281              		.align	2
 282              	.LC0:
 283 0000 53544D69 		.ascii	"STMicroelectronics\000"
 283      63726F65 
 283      6C656374 
 283      726F6E69 
 283      637300
 284              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 285              		.align	1
 286              		.p2align 2,,3
 287              		.global	USBD_FS_ManufacturerStrDescriptor
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	USBD_FS_ManufacturerStrDescriptor:
 294              	.LVL17:
 295              	.LFB137:
 305:Src/usbd_desc.c ****   UNUSED(speed);
 296              		.loc 1 305 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 306:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 300              		.loc 1 306 3 view .LVU74
 307:Src/usbd_desc.c ****   return USBD_StrDesc;
 301              		.loc 1 307 3 view .LVU75
 305:Src/usbd_desc.c ****   UNUSED(speed);
 302              		.loc 1 305 1 is_stmt 0 view .LVU76
 303 0000 10B5     		push	{r4, lr}
 304              	.LCFI3:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 4, -8
 307              		.cfi_offset 14, -4
 307:Src/usbd_desc.c ****   return USBD_StrDesc;
 308              		.loc 1 307 3 view .LVU77
 309 0002 044C     		ldr	r4, .L28
 310 0004 0448     		ldr	r0, .L28+4
 311              	.LVL18:
 305:Src/usbd_desc.c ****   UNUSED(speed);
 312              		.loc 1 305 1 view .LVU78
ARM GAS  /tmp/ccnZ1omw.s 			page 15


 313 0006 0A46     		mov	r2, r1
 307:Src/usbd_desc.c ****   return USBD_StrDesc;
 314              		.loc 1 307 3 view .LVU79
 315 0008 2146     		mov	r1, r4
 316              	.LVL19:
 307:Src/usbd_desc.c ****   return USBD_StrDesc;
 317              		.loc 1 307 3 view .LVU80
 318 000a FFF7FEFF 		bl	USBD_GetString
 319              	.LVL20:
 308:Src/usbd_desc.c **** }
 320              		.loc 1 308 3 is_stmt 1 view .LVU81
 309:Src/usbd_desc.c **** 
 321              		.loc 1 309 1 is_stmt 0 view .LVU82
 322 000e 2046     		mov	r0, r4
 323 0010 10BD     		pop	{r4, pc}
 324              	.L29:
 325 0012 00BF     		.align	2
 326              	.L28:
 327 0014 00000000 		.word	USBD_StrDesc
 328 0018 00000000 		.word	.LC0
 329              		.cfi_endproc
 330              	.LFE137:
 332              		.section	.rodata.USBD_FS_ProductStrDescriptor.str1.4,"aMS",%progbits,1
 333              		.align	2
 334              	.LC1:
 335 0000 53544D33 		.ascii	"STM32 Virtual ComPort\000"
 335      32205669 
 335      72747561 
 335      6C20436F 
 335      6D506F72 
 336              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
 337              		.align	1
 338              		.p2align 2,,3
 339              		.global	USBD_FS_ProductStrDescriptor
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv4-sp-d16
 345              	USBD_FS_ProductStrDescriptor:
 346              	.LVL21:
 347              	.LFB136:
 286:Src/usbd_desc.c ****   if(speed == 0)
 348              		.loc 1 286 1 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 287:Src/usbd_desc.c ****   {
 352              		.loc 1 287 3 view .LVU84
 286:Src/usbd_desc.c ****   if(speed == 0)
 353              		.loc 1 286 1 is_stmt 0 view .LVU85
 354 0000 10B5     		push	{r4, lr}
 355              	.LCFI4:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 4, -8
 358              		.cfi_offset 14, -4
 359              	.LBB14:
 360              	.LBB15:
ARM GAS  /tmp/ccnZ1omw.s 			page 16


 289:Src/usbd_desc.c ****   }
 361              		.loc 1 289 5 view .LVU86
 362 0002 044C     		ldr	r4, .L32
 363 0004 0448     		ldr	r0, .L32+4
 364              	.LVL22:
 289:Src/usbd_desc.c ****   }
 365              		.loc 1 289 5 view .LVU87
 366              	.LBE15:
 367              	.LBE14:
 286:Src/usbd_desc.c ****   if(speed == 0)
 368              		.loc 1 286 1 view .LVU88
 369 0006 0A46     		mov	r2, r1
 370              	.LVL23:
 371              	.LBB17:
 372              	.LBI14:
 285:Src/usbd_desc.c **** {
 373              		.loc 1 285 11 is_stmt 1 view .LVU89
 374              	.LBB16:
 289:Src/usbd_desc.c ****   }
 375              		.loc 1 289 5 view .LVU90
 376 0008 2146     		mov	r1, r4
 377              	.LVL24:
 289:Src/usbd_desc.c ****   }
 378              		.loc 1 289 5 is_stmt 0 view .LVU91
 379 000a FFF7FEFF 		bl	USBD_GetString
 380              	.LVL25:
 289:Src/usbd_desc.c ****   }
 381              		.loc 1 289 5 view .LVU92
 382              	.LBE16:
 383              	.LBE17:
 295:Src/usbd_desc.c **** }
 384              		.loc 1 295 3 is_stmt 1 view .LVU93
 296:Src/usbd_desc.c **** 
 385              		.loc 1 296 1 is_stmt 0 view .LVU94
 386 000e 2046     		mov	r0, r4
 387 0010 10BD     		pop	{r4, pc}
 388              	.L33:
 389 0012 00BF     		.align	2
 390              	.L32:
 391 0014 00000000 		.word	USBD_StrDesc
 392 0018 00000000 		.word	.LC1
 393              		.cfi_endproc
 394              	.LFE136:
 396              		.section	.rodata.USBD_FS_ConfigStrDescriptor.str1.4,"aMS",%progbits,1
 397              		.align	2
 398              	.LC2:
 399 0000 43444320 		.ascii	"CDC Config\000"
 399      436F6E66 
 399      696700
 400              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 401              		.align	1
 402              		.p2align 2,,3
 403              		.global	USBD_FS_ConfigStrDescriptor
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccnZ1omw.s 			page 17


 409              	USBD_FS_ConfigStrDescriptor:
 410              	.LVL26:
 411              	.LFB139:
 338:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 412              		.loc 1 338 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 339:Src/usbd_desc.c ****   {
 416              		.loc 1 339 3 view .LVU96
 338:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 417              		.loc 1 338 1 is_stmt 0 view .LVU97
 418 0000 10B5     		push	{r4, lr}
 419              	.LCFI5:
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 4, -8
 422              		.cfi_offset 14, -4
 423              	.LBB20:
 424              	.LBB21:
 341:Src/usbd_desc.c ****   }
 425              		.loc 1 341 5 view .LVU98
 426 0002 044C     		ldr	r4, .L36
 427 0004 0448     		ldr	r0, .L36+4
 428              	.LVL27:
 341:Src/usbd_desc.c ****   }
 429              		.loc 1 341 5 view .LVU99
 430              	.LBE21:
 431              	.LBE20:
 338:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 432              		.loc 1 338 1 view .LVU100
 433 0006 0A46     		mov	r2, r1
 434              	.LVL28:
 435              	.LBB23:
 436              	.LBI20:
 337:Src/usbd_desc.c **** {
 437              		.loc 1 337 11 is_stmt 1 view .LVU101
 438              	.LBB22:
 341:Src/usbd_desc.c ****   }
 439              		.loc 1 341 5 view .LVU102
 440 0008 2146     		mov	r1, r4
 441              	.LVL29:
 341:Src/usbd_desc.c ****   }
 442              		.loc 1 341 5 is_stmt 0 view .LVU103
 443 000a FFF7FEFF 		bl	USBD_GetString
 444              	.LVL30:
 341:Src/usbd_desc.c ****   }
 445              		.loc 1 341 5 view .LVU104
 446              	.LBE22:
 447              	.LBE23:
 347:Src/usbd_desc.c **** }
 448              		.loc 1 347 3 is_stmt 1 view .LVU105
 348:Src/usbd_desc.c **** 
 449              		.loc 1 348 1 is_stmt 0 view .LVU106
 450 000e 2046     		mov	r0, r4
 451 0010 10BD     		pop	{r4, pc}
 452              	.L37:
 453 0012 00BF     		.align	2
ARM GAS  /tmp/ccnZ1omw.s 			page 18


 454              	.L36:
 455 0014 00000000 		.word	USBD_StrDesc
 456 0018 00000000 		.word	.LC2
 457              		.cfi_endproc
 458              	.LFE139:
 460              		.section	.rodata.USBD_FS_InterfaceStrDescriptor.str1.4,"aMS",%progbits,1
 461              		.align	2
 462              	.LC3:
 463 0000 43444320 		.ascii	"CDC Interface\000"
 463      496E7465 
 463      72666163 
 463      6500
 464              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 465              		.align	1
 466              		.p2align 2,,3
 467              		.global	USBD_FS_InterfaceStrDescriptor
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu fpv4-sp-d16
 473              	USBD_FS_InterfaceStrDescriptor:
 474              	.LVL31:
 475              	.LFB140:
 357:Src/usbd_desc.c ****   if(speed == 0)
 476              		.loc 1 357 1 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 358:Src/usbd_desc.c ****   {
 480              		.loc 1 358 3 view .LVU108
 357:Src/usbd_desc.c ****   if(speed == 0)
 481              		.loc 1 357 1 is_stmt 0 view .LVU109
 482 0000 10B5     		push	{r4, lr}
 483              	.LCFI6:
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 4, -8
 486              		.cfi_offset 14, -4
 487              	.LBB26:
 488              	.LBB27:
 360:Src/usbd_desc.c ****   }
 489              		.loc 1 360 5 view .LVU110
 490 0002 044C     		ldr	r4, .L40
 491 0004 0448     		ldr	r0, .L40+4
 492              	.LVL32:
 360:Src/usbd_desc.c ****   }
 493              		.loc 1 360 5 view .LVU111
 494              	.LBE27:
 495              	.LBE26:
 357:Src/usbd_desc.c ****   if(speed == 0)
 496              		.loc 1 357 1 view .LVU112
 497 0006 0A46     		mov	r2, r1
 498              	.LVL33:
 499              	.LBB29:
 500              	.LBI26:
 356:Src/usbd_desc.c **** {
 501              		.loc 1 356 11 is_stmt 1 view .LVU113
 502              	.LBB28:
ARM GAS  /tmp/ccnZ1omw.s 			page 19


 360:Src/usbd_desc.c ****   }
 503              		.loc 1 360 5 view .LVU114
 504 0008 2146     		mov	r1, r4
 505              	.LVL34:
 360:Src/usbd_desc.c ****   }
 506              		.loc 1 360 5 is_stmt 0 view .LVU115
 507 000a FFF7FEFF 		bl	USBD_GetString
 508              	.LVL35:
 360:Src/usbd_desc.c ****   }
 509              		.loc 1 360 5 view .LVU116
 510              	.LBE28:
 511              	.LBE29:
 366:Src/usbd_desc.c **** }
 512              		.loc 1 366 3 is_stmt 1 view .LVU117
 367:Src/usbd_desc.c **** 
 513              		.loc 1 367 1 is_stmt 0 view .LVU118
 514 000e 2046     		mov	r0, r4
 515 0010 10BD     		pop	{r4, pc}
 516              	.L41:
 517 0012 00BF     		.align	2
 518              	.L40:
 519 0014 00000000 		.word	USBD_StrDesc
 520 0018 00000000 		.word	.LC3
 521              		.cfi_endproc
 522              	.LFE140:
 524              		.global	USBD_StringSerial
 525              		.comm	USBD_StrDesc,512,4
 526              		.global	USBD_LangIDDesc
 527              		.global	USBD_FS_DeviceDesc
 528              		.global	FS_Desc
 529              		.section	.data.FS_Desc,"aw"
 530              		.align	2
 533              	FS_Desc:
 534 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 535 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 536 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 537 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 538 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 539 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
 540 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 541              		.section	.data.USBD_FS_DeviceDesc,"aw"
 542              		.align	2
 543              		.set	.LANCHOR0,. + 0
 546              	USBD_FS_DeviceDesc:
 547 0000 12010002 		.ascii	"\022\001\000\002\002\002\000@\203\004@W\000\002\001"
 547      02020040 
 547      83044057 
 547      000201
 548 000f 020301   		.ascii	"\002\003\001"
 549              		.section	.data.USBD_LangIDDesc,"aw"
 550              		.align	2
 551              		.set	.LANCHOR1,. + 0
 554              	USBD_LangIDDesc:
 555 0000 04030904 		.ascii	"\004\003\011\004"
 556              		.section	.data.USBD_StringSerial,"aw"
 557              		.align	2
 558              		.set	.LANCHOR2,. + 0
ARM GAS  /tmp/ccnZ1omw.s 			page 20


 561              	USBD_StringSerial:
 562 0000 1A0300   		.ascii	"\032\003\000"
 563 0003 00000000 		.space	23
 563      00000000 
 563      00000000 
 563      00000000 
 563      00000000 
 564              		.text
 565              	.Letext0:
 566              		.file 2 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
 567              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h"
 568              		.file 4 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_types.h"
 569              		.file 5 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/reent.h"
 570              		.file 6 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/lock.h"
 571              		.file 7 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 572              		.file 8 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/stdlib.h"
 573              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 574              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 575              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 576              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 577              		.file 13 "Inc/usbd_desc.h"
 578              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/ccnZ1omw.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
     /tmp/ccnZ1omw.s:18     .text.USBD_FS_DeviceDescriptor:0000000000000000 $t
     /tmp/ccnZ1omw.s:27     .text.USBD_FS_DeviceDescriptor:0000000000000000 USBD_FS_DeviceDescriptor
     /tmp/ccnZ1omw.s:51     .text.USBD_FS_DeviceDescriptor:0000000000000008 $d
     /tmp/ccnZ1omw.s:56     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 $t
     /tmp/ccnZ1omw.s:64     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 USBD_FS_LangIDStrDescriptor
     /tmp/ccnZ1omw.s:87     .text.USBD_FS_LangIDStrDescriptor:0000000000000008 $d
     /tmp/ccnZ1omw.s:92     .text.IntToUnicode:0000000000000000 $t
     /tmp/ccnZ1omw.s:99     .text.IntToUnicode:0000000000000000 IntToUnicode
     /tmp/ccnZ1omw.s:171    .text.USBD_FS_SerialStrDescriptor:0000000000000000 $t
     /tmp/ccnZ1omw.s:179    .text.USBD_FS_SerialStrDescriptor:0000000000000000 USBD_FS_SerialStrDescriptor
     /tmp/ccnZ1omw.s:271    .text.USBD_FS_SerialStrDescriptor:0000000000000030 $d
     /tmp/ccnZ1omw.s:281    .rodata.USBD_FS_ManufacturerStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccnZ1omw.s:285    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/ccnZ1omw.s:293    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/ccnZ1omw.s:327    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000014 $d
                            *COM*:0000000000000200 USBD_StrDesc
     /tmp/ccnZ1omw.s:333    .rodata.USBD_FS_ProductStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccnZ1omw.s:337    .text.USBD_FS_ProductStrDescriptor:0000000000000000 $t
     /tmp/ccnZ1omw.s:345    .text.USBD_FS_ProductStrDescriptor:0000000000000000 USBD_FS_ProductStrDescriptor
     /tmp/ccnZ1omw.s:391    .text.USBD_FS_ProductStrDescriptor:0000000000000014 $d
     /tmp/ccnZ1omw.s:397    .rodata.USBD_FS_ConfigStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccnZ1omw.s:401    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 $t
     /tmp/ccnZ1omw.s:409    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 USBD_FS_ConfigStrDescriptor
     /tmp/ccnZ1omw.s:455    .text.USBD_FS_ConfigStrDescriptor:0000000000000014 $d
     /tmp/ccnZ1omw.s:461    .rodata.USBD_FS_InterfaceStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccnZ1omw.s:465    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/ccnZ1omw.s:473    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 USBD_FS_InterfaceStrDescriptor
     /tmp/ccnZ1omw.s:519    .text.USBD_FS_InterfaceStrDescriptor:0000000000000014 $d
     /tmp/ccnZ1omw.s:561    .data.USBD_StringSerial:0000000000000000 USBD_StringSerial
     /tmp/ccnZ1omw.s:554    .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/ccnZ1omw.s:546    .data.USBD_FS_DeviceDesc:0000000000000000 USBD_FS_DeviceDesc
     /tmp/ccnZ1omw.s:533    .data.FS_Desc:0000000000000000 FS_Desc
     /tmp/ccnZ1omw.s:530    .data.FS_Desc:0000000000000000 $d
     /tmp/ccnZ1omw.s:542    .data.USBD_FS_DeviceDesc:0000000000000000 $d
     /tmp/ccnZ1omw.s:550    .data.USBD_LangIDDesc:0000000000000000 $d
     /tmp/ccnZ1omw.s:557    .data.USBD_StringSerial:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_GetString
